{"version":3,"file":"notabug-peer.es5.js","sources":["../src/Constants.ts","../src/Schema.ts","../src/Validation.ts","../src/Config.ts","../src/Listing/ListingNode.ts","../src/GunNode.ts","../src/Thing/ThingSet.ts","../src/Thing/ThingDataNode.ts","../src/Thing/Thing.ts","../src/Query.ts","../src/Authentication.ts","../src/Tokenizer.ts","../src/Listing/ListingDefinition.ts","../src/Listing/ListingDataSource.ts","../src/Listing/ListingFilter.ts","../src/Listing/ListingSpec.ts","../src/Listing/ListingSort.ts","../src/Listing/Path.ts","../src/Listing/ListingType/TopicListing.ts","../src/Listing/ListingType/ChatListing.ts","../src/Listing/ListingType/FirehoseListing.ts","../src/Listing/ListingType/CommentedListing.ts","../src/Listing/ListingType/DomainListing.ts","../src/Listing/ListingType/CommentListing.ts","../src/Listing/SpaceSpec.ts","../src/Listing/ListingType/SpaceListing.ts","../src/Listing/ListingType/InboxListing.ts","../src/Listing/ListingType/ProfileListing.ts","../src/Listing/ListingType/index.ts","../src/Listing/ListingQuery.ts","../src/Listing/index.ts","../src/Oracle/ThingQueue.ts","../src/Oracle/Indexer.ts","../src/CommentCommand.ts","../src/Oracle/Tabulator.ts","../src/Oracle/Oracle.ts","../src/Peer.ts","../src/Page.ts","../src/notabug-peer.ts"],"sourcesContent":["const COMMAND_RE = /^ {4}~/;\nconst PREFIX = 'nab';\nconst SOUL_DELIMETER = '|~~|';\n\nconst LISTING_SIZE = 1000;\n\nconst MAX_HASH_SIZE = 64;\nconst MAX_POW_NONCE_SIZE = 64;\nconst MAX_TOPIC_SIZE = 42;\nconst MAX_AUTHOR_ALIAS_SIZE = 256;\nconst MAX_AUTHOR_ID_SIZE = 128; // ???\nconst MAX_URL_SIZE = 2048;\nconst MAX_DOMAIN_SIZE = 256;\nconst MAX_THING_KIND_SIZE = 16;\nconst MAX_THING_TITLE_SIZE = 300;\nconst MAX_THING_BODY_SIZE = 50000;\n\nconst MAX_LISTING_IDS_SIZE = 50000;\nconst MAX_LISTING_SOURCE_SIZE = 50000;\nconst MAX_LISTING_TABS_SIZE = 5000;\n\nconst MAX_LISTING_SOUL_PREFIX_SIZE = MAX_TOPIC_SIZE;\nconst MAX_LISTING_SOUL_IDENTIFIER_SIZE = MAX_AUTHOR_ID_SIZE;\nconst MAX_LISTING_SOUL_SORT_SIZE = 16;\nconst MAX_LISTING_SOUL_TYPE_SIZE = MAX_TOPIC_SIZE;\nconst MAX_LISTING_SOUL_KIND_SIZE = 16;\n\nconst CHAT_PRELOAD_ITEMS = 10;\n\nconst INDEXER =\n  'CEyKrDd1xyPXpWSV00MgvnZY2VJLHXgzCvhMeDwKTYA.yjSq0DyXzzhB_ZXr_DzfJgij3tXU0-3t0Q5bJAtZpj8';\n\nexport const Constants = {\n  COMMAND_RE,\n  PREFIX,\n  SOUL_DELIMETER,\n  LISTING_SIZE,\n  MAX_HASH_SIZE,\n  MAX_POW_NONCE_SIZE,\n  MAX_TOPIC_SIZE,\n  MAX_AUTHOR_ALIAS_SIZE,\n  MAX_AUTHOR_ID_SIZE,\n  MAX_URL_SIZE,\n  MAX_DOMAIN_SIZE,\n  MAX_THING_KIND_SIZE,\n  MAX_THING_TITLE_SIZE,\n  MAX_THING_BODY_SIZE,\n  MAX_LISTING_IDS_SIZE,\n  MAX_LISTING_SOURCE_SIZE,\n  MAX_LISTING_TABS_SIZE,\n  MAX_LISTING_SOUL_PREFIX_SIZE,\n  MAX_LISTING_SOUL_IDENTIFIER_SIZE,\n  MAX_LISTING_SOUL_SORT_SIZE,\n  MAX_LISTING_SOUL_TYPE_SIZE,\n  MAX_LISTING_SOUL_KIND_SIZE,\n  CHAT_PRELOAD_ITEMS,\n  INDEXER\n};\n","import * as R from 'ramda';\nimport Route from 'route-parser';\nimport { SchemaNodeTypeMap } from './types';\nimport { AUTH_SCHEMA } from 'gun-suppressor-sear';\nimport { Constants } from './Constants';\n\nconst definitions = {\n  ...AUTH_SCHEMA,\n  topicName: {\n    type: 'string',\n    minLength: 1,\n    maxLength: Constants.MAX_TOPIC_SIZE\n  },\n\n  TopicDay: {\n    title: 'Topic Day',\n    description: 'A single day of things in a topic',\n    soul: {\n      pattern: `${Constants.PREFIX}/topics/:topicName/days/:year/:month/:day`,\n      properties: {\n        topicName: { $ref: 'schema.json#/definitions/topicName' },\n        year: { type: 'number', minimum: 2018, maximum: 2100 },\n        month: { type: 'number', minimum: 1, maximum: 12 },\n        day: { type: 'number', minimum: 1, maximum: 31 }\n      },\n      required: ['topicName', 'year', 'month', 'day']\n    },\n    propsFromSoul: { name: 'topicName' },\n    properties: {\n      name: {\n        description: 'Deprecated as unnecessary',\n        type: 'string'\n      }\n    },\n    additionalProperties: {\n      edgeMatchesKey: true,\n      anyOf: [{ $ref: '#/definitions/ThingEdge' }, { $ref: '#/definitions/TopicEdge' }]\n    }\n  },\n\n  Topic: {\n    title: 'Topic',\n    description: 'All things in a topic',\n    soul: {\n      pattern: `${Constants.PREFIX}/topics/:topicName`,\n      properties: {\n        topicName: { $ref: 'schema.json#/definitions/topicName' }\n      },\n      required: ['topicName']\n    },\n    propsFromSoul: { name: 'topicName' },\n    properties: {\n      name: {\n        description: 'Deprecated as unnecessary',\n        type: 'string'\n      }\n    },\n    additionalProperties: {\n      edgeMatchesKey: true,\n      anyOf: [{ $ref: '#/definitions/ThingEdge' }, { $ref: '#/definitions/TopicEdge' }]\n    }\n  },\n\n  domainName: {\n    type: 'string',\n    minLength: 1,\n    maxLength: Constants.MAX_DOMAIN_SIZE\n  },\n\n  Domain: {\n    title: 'Domain',\n    description: 'All things in a domain',\n    soul: {\n      pattern: `${Constants.PREFIX}/domains/:domainName`,\n      properties: {\n        domainName: { $ref: 'schema.json#/definitions/domainName' }\n      },\n      required: ['domainName']\n    },\n    additionalProperties: {\n      edgeMatchesKey: true,\n      anyOf: [{ $ref: '#/definitions/ThingEdge' }]\n    }\n  },\n\n  url: { type: ['null', 'string'], maxLength: Constants.MAX_URL_SIZE },\n  URL: {\n    title: 'URL',\n    description: 'All things for a given URL',\n    soul: {\n      pattern: `${Constants.PREFIX}/urls/\\*url`, // eslint-disable-line no-useless-escape\n      properties: {\n        url: { $ref: 'schema.json#/definitions/url' }\n      },\n      required: ['url']\n    },\n    additionalProperties: {\n      edgeMatchesKey: true,\n      anyOf: [{ $ref: '#/definitions/ThingEdge' }]\n    }\n  },\n\n  thingId: {\n    type: 'string',\n    maxLength: Constants.MAX_HASH_SIZE\n  },\n\n  thingSoul: {\n    properties: {\n      thingId: { '#ref': '#definitions/thingId' }\n    }\n  },\n\n  ThingAllComments: {\n    title: 'Thing All Comments',\n    description: 'All comments for a given submission',\n    soul: {\n      pattern: `${Constants.PREFIX}/things/:thingId/allcomments`,\n      allOf: [{ $ref: 'schema.json#/definitions/thingSoul' }]\n    },\n    additionalProperties: {\n      edgeMatchesKey: true,\n      anyOf: [{ $ref: '#/definitions/ThingEdge' }]\n    }\n  },\n\n  ThingComments: {\n    title: 'Thing Comments',\n    description: 'Direct replies to a thing',\n    soul: {\n      pattern: `${Constants.PREFIX}/things/:thingId/comments`,\n      allOf: [{ $ref: 'schema.json#/definitions/thingSoul' }]\n    },\n    additionalProperties: {\n      edgeMatchesKey: true,\n      anyOf: [{ $ref: '#/definitions/ThingEdge' }]\n    }\n  },\n\n  timestamp: { type: ['number', 'string'] },\n  thingKind: {\n    type: 'string',\n    maxLength: Constants.MAX_THING_KIND_SIZE\n  },\n\n  Thing: {\n    title: 'Thing Reference',\n    description: 'These are submissions, comments, chat messages and wiki pages',\n    soul: {\n      pattern: `${Constants.PREFIX}/things/:thingId`,\n      allOf: [{ $ref: 'schema.json#/definitions/thingSoul' }]\n    },\n    propsFromSoul: { id: 'thingId' },\n    properties: {\n      id: { $ref: '#/definitions/thingId' },\n      kind: { '#ref': '#/definitions/thingKind' },\n      timestamp: { $ref: '#/definitions/timestamp' },\n      originalHash: { $ref: '#/definitions/thingId' },\n      data: {\n        oneOf: [\n          { $ref: '#/definitions/ThingDataEdge' },\n          { $ref: '#/definitions/ThingDataSignedEdge' }\n        ]\n      },\n      topic: {\n        anyOf: [\n          { $ref: '#/definitions/TopicEdge' },\n          {\n            description: 'Some old things had generic topic souls',\n            type: 'object',\n            additionalProperties: false,\n            properties: {\n              '#': { type: 'string', maxLength: 42 }\n            },\n            required: ['#']\n          }\n        ]\n      },\n      domain: { $ref: '#/definitions/DomainEdge' },\n      url: { $ref: '#/definitions/URLEdge' },\n      comments: { thingRelatedEdge: 'ThingComments' },\n      allcomments: { thingRelatedEdge: 'ThingAllComments' },\n      votesup: { thingRelatedEdge: 'ThingVotesUp' },\n      votesdown: { thingRelatedEdge: 'ThingVotesDown' },\n      op: { $ref: '#/definitions/ThingEdge' },\n      replyTo: { $ref: '#/definitions/ThingEdge' },\n      author: { $ref: '#/definitions/SEAAuthorEdge' }\n    },\n\n    anyOf: [\n      {\n        allOf: [\n          {\n            thingHashMatchesSoul: true\n          },\n          {\n            anyOf: [{ signedThingDataMatchesThing: true }, { thingDataMatchesOriginalHash: true }]\n          }\n        ]\n      },\n      { isLegacyThing: true },\n      {\n        additionalProperties: false,\n        description: 'Self verifying can be updated in isolation',\n        properties: {\n          id: { $ref: '#/definitions/thingId' },\n          comments: { thingRelatedEdge: 'ThingComments' },\n          allcomments: { thingRelatedEdge: 'ThingAllComments' },\n          votesup: { thingRelatedEdge: 'ThingVotesUp' },\n          votesdown: { thingRelatedEdge: 'ThingVotesDown' }\n        }\n      }\n    ]\n  },\n\n  ProofOfWorkVotes: {\n    $async: true,\n    keysAreProofsOfWork: {\n      algorithm: 'argon2d',\n      config: {\n        complexity: 6,\n        hashLength: 32,\n        timeCost: 1,\n        memoryCost: 10240,\n        parallelism: 1\n      }\n    }\n  },\n\n  ThingVotesUp: {\n    soul: {\n      pattern: `${Constants.PREFIX}/things/:thingId/votesup`,\n      allOf: [{ $ref: 'schema.json#/definitions/thingSoul' }]\n    },\n    allOf: [{ $ref: '#/definitions/ProofOfWorkVotes' }]\n  },\n\n  ThingVotesDown: {\n    soul: {\n      pattern: `${Constants.PREFIX}/things/:thingId/votesdown`,\n      allOf: [{ $ref: 'schema.json#/definitions/thingSoul' }]\n    },\n    allOf: [{ $ref: '#/definitions/ProofOfWorkVotes' }]\n  },\n\n  ThingData: {\n    title: 'Unsigned Thing Data',\n    description: 'This is the actual content of a thing',\n    soul: {\n      pattern: `${Constants.PREFIX}/things/:thingId/data`,\n      allOf: [{ $ref: 'schema.json#/definitions/thingSoul' }],\n      required: ['thingId']\n    },\n    properties: {\n      kind: { $ref: '#/definitions/thingKind' },\n      title: {\n        type: 'string',\n        minLength: 1,\n        maxLength: Constants.MAX_THING_TITLE_SIZE\n      },\n      topic: { $ref: '#/definitions/topicName' },\n      body: {\n        type: ['null', 'string'],\n        maxLength: Constants.MAX_THING_BODY_SIZE\n      },\n      author: { $ref: '#/definitions/seaAlias' },\n      authorId: { $ref: '#/definitions/seaAuthorId' },\n      opId: { $ref: '#/definitions/thingId' },\n      replyToId: { $ref: '#/definitions/thingId' },\n      domain: { $ref: '#/definitions/domainName' },\n      url: { $ref: '#/definitions/url' },\n      timestamp: { $ref: '#/definitions/timestamp' }\n    },\n    thingDataHashMatchesSoul: true\n  },\n\n  ThingDataSigned: {\n    title: 'Signed Thing Data',\n    description: 'This is the actual content of a thing, cryptographically signed',\n    soul: {\n      pattern: `${Constants.PREFIX}/things/:thingId/data~:authorId.`,\n      properties: {\n        thingId: { $ref: 'schema.json#/definitions/thingId' },\n        authorId: { $ref: 'schema.json#/definitions/seaAuthorId' }\n      },\n      required: ['thingId', 'authorId']\n    },\n    properties: {\n      kind: { sea: { $ref: 'schema.json#/definitions/thingKind' } },\n      title: {\n        sea: {\n          type: 'string',\n          minLength: 1,\n          maxLength: Constants.MAX_THING_TITLE_SIZE\n        }\n      },\n      topic: { sea: { $ref: 'schema.json#/definitions/topicName' } },\n      body: {\n        sea: {\n          type: ['null', 'string'],\n          maxLength: Constants.MAX_THING_BODY_SIZE\n        }\n      },\n      author: {\n        sea: { $ref: 'schema.json#/definitions/seaAlias' }\n      },\n      authorId: { sea: { $ref: 'schema.json#/definitions/seaAuthorId' } },\n      opId: { sea: { $ref: 'schema.json#/definitions/thingId' } },\n      replyToId: { sea: { $ref: 'schema.json#/definitions/thingId' } },\n      domain: { sea: { $ref: 'schema.json#/definitions/domainName' } },\n      url: { sea: { $ref: 'schema.json#/definitions/url' } },\n      timestamp: { sea: { $ref: 'schema.json#/definitions/timestamp' } }\n    }\n  },\n\n  ThingVoteCounts: {\n    title: 'Thing Vote Counts',\n    description: 'Aggregated counts from a tabulator',\n    soul: {\n      pattern: `${Constants.PREFIX}/things/:thingId/votecounts@~:tabulator.`,\n      properties: {\n        thingId: { $ref: 'schema.json#/definitions/thingId' },\n        tabulator: { $ref: 'schema.json#/definitions/seaAuthorId' }\n      }\n    },\n    properties: {\n      up: { sea: { type: ['number', 'string'] } },\n      down: { sea: { type: ['number', 'string'] } },\n      comment: { sea: { type: ['number', 'string'] } },\n      score: { sea: { type: ['number', 'string'] } },\n      commands: { sea: { type: ['object', 'string'] } }\n    }\n  },\n\n  ListingData: {\n    $async: true,\n    title: 'Listing Node Data',\n    description: 'Shared description of listing properties',\n    type: 'object',\n    properties: {\n      _: {\n        additionalProperties: true\n      }\n    },\n    patternProperties: {\n      '^d+$': { sea: { type: ['string', 'null', 'undefined'] } }\n    },\n\n    deleteNonNumericKeys: true,\n    deleteMetaForMissing: true\n  },\n\n  sortName: {\n    type: 'string',\n    enum: [\n      'new',\n      'old',\n      'active',\n      'top',\n      'comments',\n      'discussed',\n      'hot',\n      'best',\n      'controversial',\n      'random',\n      'firehose',\n      'chat'\n    ]\n  },\n\n  TopicListing: {\n    soul: {\n      pattern: `${Constants.PREFIX}/t/:topic/:sort@~:indexer.`,\n      required: ['topic', 'sort', 'indexer'],\n      properties: {\n        topic: { type: 'string' },\n        sort: { $ref: 'schema.json#/definitions/sortName' },\n        indexer: { $ref: 'schema.json#/definitions/seaAuthorId' }\n      }\n    },\n    allOf: [{ $ref: '#/definitions/ListingData' }]\n  },\n\n  DomainListing: {\n    soul: {\n      pattern: `${Constants.PREFIX}/domain/:domain/:sort@~:indexer.`,\n      required: ['domain', 'sort', 'indexer'],\n      properties: {\n        domain: { type: 'string' },\n        sort: { $ref: 'schema.json#/definitions/sortName' },\n        indexer: { $ref: 'schema.json#/definitions/seaAuthorId' }\n      }\n    },\n    allOf: [{ $ref: '#/definitions/ListingData' }]\n  },\n\n  ThingCommentsListing: {\n    soul: {\n      pattern: `${Constants.PREFIX}/things/:thingId/comments/:sort@~:indexer.`,\n      properties: {\n        thingId: { $ref: 'schema.json#/definitions/thingId' },\n        sort: { $ref: 'schema.json#/definitions/sortName' },\n        indexer: { $ref: 'schema.json#/definitions/seaAuthorId' }\n      }\n    },\n    allOf: [{ $ref: '#/definitions/ListingData' }]\n  },\n\n  userListingType: {\n    type: 'string',\n    enum: ['overview', 'submitted', 'comments', 'commands', 'commented']\n  },\n\n  AuthorRepliesListing: {\n    soul: {\n      pattern: `${Constants.PREFIX}/user/:authorId/replies/:type/:sort@~:indexer.`,\n      properties: {\n        authorId: { $ref: 'schema.json#/definitions/seaAuthorId' },\n        sort: { $ref: 'schema.json#/definitions/sortName' },\n        indexer: { $ref: 'schema.json#/definitions/seaAuthorId' },\n        type: { $ref: 'schema.json#/definitions/userListingType' }\n      }\n    },\n    allOf: [{ $ref: '#/definitions/ListingData' }]\n  },\n\n  AuthorProfileListing: {\n    soul: {\n      pattern: `${Constants.PREFIX}/user/:authorId/:type/:sort@~:indexer.`,\n      properties: {\n        authorId: { $ref: 'schema.json#/definitions/seaAuthorId' },\n        sort: { $ref: 'schema.json#/definitions/sortName' },\n        indexer: { $ref: 'schema.json#/definitions/seaAuthorId' },\n        type: { $ref: 'schema.json#/definitions/userListingType' }\n      }\n    },\n    allOf: [{ $ref: '#/definitions/ListingData' }]\n  },\n\n  SpaceListing: {\n    soul: {\n      pattern: `${Constants.PREFIX}/user/:authorId/spaces/:name/:sort@~:indexer.`,\n      properties: {\n        authorId: { $ref: 'schema.json#/definitions/seaAuthorId' },\n        sort: { $ref: 'schema.json#/definitions/sortName' },\n        indexer: { $ref: 'schema.json#/definitions/seaAuthorId' },\n        name: { $ref: 'schema.json#/definitions/topicName' }\n      }\n    },\n    allOf: [{ $ref: '#/definitions/ListingData' }]\n  },\n\n  AuthorComments: {\n    title: \"Author's Comments\",\n    description: 'All of an authors comments should be linked here',\n    soul: {\n      pattern: `${Constants.PREFIX}/comments~:authorId.`,\n      properties: {\n        authorId: { $ref: 'schema.json#/definitions/seaAuthorId' }\n      },\n      required: ['authorId']\n    },\n    additionalProperties: {\n      sea: {\n        edgeMatchesKey: true,\n        anyOf: [{ $ref: 'schema.json#/definitions/ThingEdge' }]\n      }\n    }\n  },\n\n  AuthorSubmissions: {\n    title: \"Author's Submissions\",\n    description: \"All of an author's submissions should be linked here\",\n    soul: {\n      pattern: `${Constants.PREFIX}/submissions~:authorId.`,\n      properties: {\n        authorId: { $ref: 'schema.json#/definitions/seaAuthorId' }\n      },\n      required: ['authorId']\n    }\n  },\n\n  AuthorThings: {\n    title: \"Author's Things\",\n    description: \"All of an author's things should be linked here\",\n    soul: {\n      pattern: `${Constants.PREFIX}/things~:authorId.`,\n      properties: {\n        authorId: { $ref: 'schema.json#/definitions/seaAuthorId' }\n      },\n      required: ['authorId']\n    },\n    additionalProperties: {\n      sea: {\n        edgeMatchesKey: true,\n        anyOf: [{ $ref: 'schema.json#/definitions/ThingEdge' }]\n      }\n    }\n  },\n\n  AuthorPages: {\n    title: 'Author Page Map',\n    description: 'Mapping of page names to things',\n    soul: {\n      pattern: `${Constants.PREFIX}/pages~:authorId.`,\n      properties: {\n        authorId: { $ref: 'schema.json#/definitions/seaAuthorId' }\n      },\n      required: ['authorId']\n    },\n    additionalProperties: {\n      sea: {\n        edgeMatchesKey: true,\n        anyOf: [{ $ref: 'schema.json#/definitions/ThingEdge' }]\n      }\n    }\n  }\n};\n\ninterface RouteMap {\n  [name: string]: any;\n}\n\nconst routes: RouteMap = R.keysIn(definitions).reduce((result: any, name: string) => {\n  const pattern = R.pathOr('', [name, 'soul', 'pattern'], definitions);\n\n  if (!pattern) return result;\n  return R.assoc(name, new Route(pattern), result);\n}, definitions);\n\nconst defsWithRoutes: SchemaNodeTypeMap = R.compose(\n  R.reduce(\n    (res, [name, route]) => R.assoc(name, R.assoc('route', route, R.prop(name, definitions)), res),\n    {}\n  ),\n  R.toPairs as (map: RouteMap) => [string, any][]\n)(routes);\n\nexport const Schema = {\n  SEAAuthor: defsWithRoutes.SEAAuthor,\n  TopicDay: defsWithRoutes.TopicDay,\n  Topic: defsWithRoutes.Topic,\n  Domain: defsWithRoutes.Domain,\n  URL: defsWithRoutes.URL,\n  ThingAllComments: defsWithRoutes.ThingAllComments,\n  ThingComments: defsWithRoutes.ThingComments,\n  Thing: defsWithRoutes.Thing,\n  ThingVotesUp: defsWithRoutes.ThingVotesUp,\n  ThingVotesDown: defsWithRoutes.ThingVotesDown,\n  ThingData: defsWithRoutes.ThingData,\n  ThingDataSigned: defsWithRoutes.ThingDataSigned,\n  ThingVoteCounts: defsWithRoutes.ThingVoteCounts,\n  TopicListing: defsWithRoutes.TopicListing,\n  DomainListing: defsWithRoutes.DomainListing,\n  ThingCommentsListing: defsWithRoutes.ThingCommentsListing,\n  AuthorRepliesListing: defsWithRoutes.AuthorRepliesListing,\n  AuthorProfileListing: defsWithRoutes.AuthorProfileListing,\n  SpaceListing: defsWithRoutes.SpaceListing,\n  AuthorComments: defsWithRoutes.AuthorComments,\n  AuthorSubmissions: defsWithRoutes.AuthorSubmissions,\n  AuthorThings: defsWithRoutes.AuthorThings,\n  AuthorPages: defsWithRoutes.AuthorPages,\n  definitions,\n  routes\n};\n","import * as R from 'ramda';\nimport objHash from 'object-hash';\nimport { createSuppressor } from 'gun-suppressor';\nimport * as sea from 'gun-suppressor-sear';\nimport { NabProtocolMsg, GunNodeType, SchemaNodeType, ThingDataNodeType } from './types';\nimport { Schema } from './Schema';\n\nconst isLegacyThing = (_schema: any, data: GunNodeType) => {\n  const dataSoul = R.pathOr('', ['data', '#'], data);\n  const newest = R.without(\n    ['comments', 'allcomments', 'votesup', 'votesdown'],\n    R.keys(R.path(['_', '>'], data))\n  )\n    .map(key => R.path(['_', '>', key], data))\n    .sort()\n    .pop();\n  const thingId = R.propOr('', 'thingId', Schema.ThingData.route.match(dataSoul));\n  const id = R.prop('id', data);\n\n  return id && id === thingId && newest && newest < 1543102814945;\n};\n\nconst thingHashMatchesSoul = (_schema: any, data: GunNodeType) => {\n  const id = R.prop('id', data);\n\n  return (\n    id &&\n    id ===\n      objHash({\n        authorId: (R.pathOr('', ['author', '#'], data) || '').substr(1) || undefined,\n        timestamp: parseInt(R.prop('timestamp', data), 10),\n        kind: R.prop('kind', data),\n        topic: R.propOr(\n          undefined,\n          'topicName',\n          Schema.Topic.route.match(R.pathOr('', ['topic', '#'], data))\n        ),\n        opId: R.propOr(\n          undefined,\n          'thingId',\n          Schema.Thing.route.match(R.pathOr('', ['op', '#'], data))\n        ),\n        replyToId: R.propOr(\n          undefined,\n          'thingId',\n          Schema.Thing.route.match(R.pathOr('', ['replyTo', '#'], data))\n        ),\n        originalHash: R.prop('originalHash', data)\n      })\n  );\n};\n\nconst signedThingDataMatches = (_schema: any, data: GunNodeType) => {\n  const authorId = (R.pathOr('', ['author', '#'], data) || '').substr(1) || undefined;\n  const signedId = R.propOr(\n    '',\n    'authorId',\n    Schema.ThingDataSigned.route.match(R.pathOr('', ['data', '#'], data))\n  );\n\n  return authorId && authorId === signedId;\n};\n\nconst thingDataMatchesOriginalHash = (_schema: any, data: GunNodeType) => {\n  const originalHash = R.prop('originalHash', data);\n  const id = R.propOr(\n    '',\n    'thingId',\n    Schema.ThingData.route.match(R.pathOr('', ['data', '#'], data))\n  );\n\n  return id && id === originalHash;\n};\n\nconst getIsThingRelatedEdge = (ajv: any) => (\n  nodeTypeName: string,\n  data: any,\n  _pSchema: any,\n  _cPath: any,\n  parentData: any\n) => {\n  const thingId = R.propOr(\n    '',\n    'thingId',\n    Schema.Thing.route.match(R.path(['_', '#'], parentData) || '')\n  );\n  const NodeType: SchemaNodeType = R.propOr(null, nodeTypeName, Schema);\n  const propThingId = R.propOr('', 'thingId', NodeType.route.match(R.propOr('', '#', data)));\n\n  if (!thingId || thingId !== propThingId) return false;\n  return ajv.compile({ $ref: `schema.json#/definitions/${nodeTypeName}Edge` })(data);\n};\n\nconst thingDataHashMatches = (_schema: any, data: any) => {\n  const record: ThingDataNodeType = R.dissoc('_', data);\n\n  record.timestamp = parseFloat(record.timestamp as string);\n  const thingId = R.propOr(\n    '',\n    'thingId',\n    Schema.ThingData.route.match(R.path(['_', '#'], data) || '')\n  );\n  return thingId && thingId === objHash(record);\n};\n\nconst isVoteValid = (argon2: any, schema: any, prefix: string, vote: string) => {\n  const { algorithm = 'argon2d', config = {} } = schema || {};\n\n  // const nonce = Buffer.hasOwnProperty('from') ? Buffer.from(vote, 'hex') : new Buffer(vote, 'hex');\n  const nonce = Buffer.from(vote, 'hex');\n  // const salt = Buffer.hasOwnProperty('from') ? Buffer.from(nonce, 'hex') : new Buffer(nonce, 'hex');\n  const salt = nonce;\n\n  const hash = argon2.hash(prefix, {\n    salt,\n    hashLength: config.hashLength,\n    timeCost: config.timeCost,\n    memoryCost: config.memoryCost,\n    parallelism: config.parallelism,\n    raw: true,\n    type: argon2[algorithm]\n  });\n  let off = 0;\n  let i;\n\n  for (i = 0; i <= config.complexity - 8; i += 8, off++) {\n    if (hash[off] !== 0) return false;\n  }\n  const mask = 0xff << (8 + i - config.complexity);\n\n  return (hash[off] & mask) === 0;\n};\n\nconst keysAreProofsOfWork = (schema: any, data: any) => {\n  const argon2 = require('argon2');\n\n  if (!argon2) return true; // in browser don't bother for now\n  const { algorithm = 'argon2d' } = schema || {};\n  const prefix = R.pathOr('', ['_', '#'], data);\n\n  if (algorithm !== 'argon2d') {\n    throw new Error('Only argon2 supported for vote hashes');\n  }\n\n  R.without(['_'], R.keysIn(data)).forEach(vote => {\n    if (!isVoteValid(argon2, schema, prefix, vote)) {\n      console.log('invalid vote', prefix, vote);\n      delete data[vote];\n    }\n  });\n  return true;\n};\n\nconst deleteNonNumericKeys = (schema: any, data: any) => {\n  const keys = R.without(['_'], R.keysIn(data));\n  const meta = R.pathOr({}, ['_', '>'], data);\n\n  keys.forEach(key => {\n    const val = parseInt(key, 10);\n\n    if (!val && val !== 0) {\n      delete meta[key];\n      delete data[key];\n    }\n  });\n  return true;\n};\n\nconst deleteMetaForMissing = (schema: any, data: any) => {\n  const keys = R.without(['_'], R.keysIn(data));\n  const meta = R.pathOr({}, ['_', '>'], data);\n  const metaKeys = R.keysIn(meta);\n  const missing = R.difference(metaKeys, keys);\n\n  if (missing.length) data['_']['>'] = R.omit(missing, meta);\n  return true;\n};\n\nconst initAjv = R.compose(\n  (ajv: any) => {\n    ajv.addKeyword('isLegacyThing', {\n      validate: isLegacyThing\n    });\n    ajv.addKeyword('thingHashMatchesSoul', {\n      validate: thingHashMatchesSoul\n    });\n    ajv.addKeyword('signedThingDataMatchesThing', {\n      validate: signedThingDataMatches\n    });\n    ajv.addKeyword('thingDataMatchesOriginalHash', {\n      validate: thingDataMatchesOriginalHash\n    });\n    ajv.addKeyword('thingRelatedEdge', {\n      validate: getIsThingRelatedEdge(ajv)\n    });\n    ajv.addKeyword('thingDataHashMatchesSoul', {\n      validate: thingDataHashMatches\n    });\n    ajv.addKeyword('keysAreProofsOfWork', {\n      validate: keysAreProofsOfWork,\n      modifying: true\n    });\n    ajv.addKeyword('deleteNonNumericKeys', {\n      validate: deleteNonNumericKeys,\n      modifying: true\n    });\n    ajv.addKeyword('deleteMetaForMissing', {\n      validate: deleteMetaForMissing,\n      modifying: true\n    });\n    return ajv;\n  },\n  sea.initAjv\n);\n\nexport const suppressor = createSuppressor({\n  definitions: Schema.definitions,\n  init: initAjv\n});\n\nconst gunWireInput = R.curry((peer, context) =>\n  context.on('in', function wireInput(this: any, msg: NabProtocolMsg) {\n    const _ = msg['_'];\n\n    delete msg['_'];\n    if ('ping' in msg || 'leech' in msg) return;\n    if (msg.put && !R.keys(msg.put).length) return;\n    const promise = peer.config.disableValidation ? Promise.resolve(msg) : suppressor.validate(msg);\n\n    promise\n      .then((validated: boolean) => {\n        if (!validated) return console.log(\"msg didn't validate\", msg);\n        msg['_'] = _;\n        return this.to.next(msg);\n      })\n      .catch((err: Error) => console.error('validate err', msg, err.stack || err));\n  })\n);\n\nexport const Validation = {\n  isLegacyThing,\n  thingHashMatchesSoul,\n  signedThingDataMatches,\n  thingDataMatchesOriginalHash,\n  getIsThingRelatedEdge,\n  thingDataHashMatches,\n  isVoteValid,\n  keysAreProofsOfWork,\n  initAjv,\n  suppressor,\n  gunWireInput\n};\n","import * as R from 'ramda';\nimport { Constants } from './Constants';\n\ntype UpdateFunction = (updates: any) => void;\ninterface ConfigType {\n  [idx: string]: string | number | UpdateFunction;\n  tabulator: string;\n  indexer: string;\n  owner: string;\n  oracleMaxStaleness: number;\n  update: UpdateFunction;\n}\n\nexport const Config: ConfigType = {\n  tabulator: Constants.INDEXER,\n  indexer: Constants.INDEXER,\n  owner: Constants.INDEXER,\n  oracleMaxStaleness: 1000 * 60 * 60,\n  update: R.compose(\n    R.map(([key, val]: [string, string]) => (Config[key] = val)),\n    R.toPairs\n  )\n};\n","import * as R from 'ramda';\nimport { query, resolve } from 'gun-scope';\nimport { Constants } from '../Constants';\nimport { Config } from '../Config';\nimport { Schema } from '../Schema';\nimport { ListingNodeRow, ListingNodeType, SortDataRow, GunScope } from '../types';\n\nconst [POS_IDX, POS_ID, POS_VAL] = [0, 1, 2, 3];\n\nconst rowsToIds = (rows: ListingNodeRow[]) =>\n  rows.map(row => ((row && row[POS_ID]) || '') as string).filter(id => !!id);\nconst rowsToItems = R.map<ListingNodeRow, SortDataRow>((R.slice(1, 3) as unknown) as (\n  row: ListingNodeRow\n) => SortDataRow);\nconst source = R.propOr('', 'source');\nconst soulFromPath = R.curry((indexer, path) => `${Constants.PREFIX}${path}@~${indexer}.`);\nconst pathFromSoul = R.compose(\n  R.replace(new RegExp(`^${Constants.PREFIX}`), ''),\n  R.replace(/@~.*\\./, '')\n);\n\nconst idToSoul = (thingId: string) => Schema.Thing.route.reverse({ thingId }) || '';\nconst idsToSouls = (ids: string[]) => ids.map(idToSoul).filter(id => !!id);\nconst soulToId = (soul: string) => R.propOr('', 'thingId', Schema.Thing.route.match(soul));\nconst soulsToIds = R.map(soulToId);\n\nfunction getRow(node: ListingNodeType, idx: string | number) {\n  const row: (string | number)[] = R.split(',', R.propOr('', `${idx}`, node));\n  row[0] = ((row[0] as string) || '').trim();\n  row[1] = parseFloat(row[1] as string);\n  row.splice(0, 0, parseInt(idx as string, 10));\n  return row as ListingNodeRow;\n}\n\nconst itemKeys = R.compose(\n  R.filter(\n    R.compose(\n      val => !!(val === 0 || val),\n      (val: string) => parseInt(val, 10)\n    )\n  ) as (keys: string[]) => string[],\n  R.keysIn as (node: ListingNodeType) => string[]\n);\n\nfunction rows(node: ListingNodeType): ListingNodeRow[] {\n  const keys = R.keysIn(node);\n  const result: ListingNodeRow[] = [];\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const keyVal = parseInt(key, 10);\n    if (!keyVal && keyVal !== 0) continue;\n    result.push(getRow(node, key));\n  }\n\n  return result;\n}\n\nconst ids = R.compose(\n  rowsToIds,\n  rows\n);\n\nconst sortRows = R.sortWith([\n  R.ascend(\n    R.compose(\n      R.cond([[R.isNil, R.always(Infinity)], [R.T, parseFloat]]),\n      R.nth(POS_VAL)\n    )\n  )\n]) as (rows: ListingNodeRow[]) => ListingNodeRow[];\n\nconst sortedIds = R.compose(\n  R.map(R.nth(POS_ID) as (row: ListingNodeRow) => string | undefined),\n  sortRows,\n  R.filter(R.identity as (T: ListingNodeRow) => boolean) as (\n    rows: ListingNodeRow[]\n  ) => ListingNodeRow[],\n  rows\n);\n\nconst mapSortData = (R.addIndex(R.map) as unknown) as (\n  fn: (r: SortDataRow, i: number) => ListingNodeRow\n) => (data: SortDataRow[]) => ListingNodeRow[];\nconst itemsToRows = mapSortData(\n  (item: SortDataRow, idx: number): ListingNodeRow => [idx, item[0], item[1]]\n);\n\nasync function diffSingle(\n  node: ListingNodeType,\n  updatedItem: SortDataRow,\n  { maxSize = 1000 } = {}\n) {\n  let highestKey = -1;\n  let highestValueKey = null;\n  let highestValue = null;\n  let key: string;\n  const [updateId, updateValue] = updatedItem;\n\n  for (key in node || {}) {\n    const parsed = parseInt(key, 10);\n\n    if (!(parsed || parsed === 0)) continue;\n\n    const row: ListingNodeRow = getRow(node, key);\n    const [idx, id = null, value] = row;\n    if (id === updateId) {\n      if (updateValue === value) return null;\n      return { [`${idx}`]: updatedItem.join(',') };\n    }\n\n    if (highestValue === null || (value !== null && value > highestValue)) {\n      highestValue = value;\n      highestValueKey = idx;\n    }\n    if (idx !== null && idx > highestKey) highestKey = idx;\n  }\n\n  if (!maxSize || highestKey + 1 < maxSize) {\n    return { [`${highestKey + 1}`]: updatedItem.join(',') };\n  }\n\n  if (highestValue === null || updateValue < highestValue) {\n    return { [`${highestValueKey}`]: updatedItem.join(',') };\n  }\n\n  return null;\n}\n\nasync function diff(\n  node: ListingNodeType,\n  updatedItems: SortDataRow[] = [],\n  removeIds: string[] = [],\n  { maxSize = 1000 } = {}\n) {\n  if (updatedItems.length === 1 && !removeIds.length) {\n    return diffSingle(node, updatedItems[0], { maxSize });\n  }\n  const removed = R.indexBy(R.identity, removeIds);\n  const byId = {} as { [id: string]: ListingNodeRow };\n  const changes: ListingNodeType = {};\n  const rows: ListingNodeRow[] = [];\n  const updated = {} as { [id: string]: boolean };\n  let toReplace = [];\n  let maxIdx = 0;\n  let key;\n\n  for (key in node || {}) {\n    const parsed = parseInt(key, 10);\n\n    if (!(parsed || parsed === 0)) continue;\n    const row: ListingNodeRow = getRow(node, key);\n    const [idx, id = null, rawValue = null] = row;\n    row[POS_VAL] = rawValue === null ? null : rawValue;\n    if (id && removed[id]) row[POS_ID] = row[POS_VAL] = null;\n    if (id) byId[id] = row;\n    if (row[POS_ID]) {\n      rows.push(row);\n    } else {\n      toReplace.push(row);\n    }\n    if (idx && idx > maxIdx) maxIdx = idx;\n  }\n\n  for (let i = 0; i < updatedItems.length; i++) {\n    const [id, value] = updatedItems[i] || [null, null];\n\n    if (!id) continue;\n    const existing = byId[id];\n\n    if (existing) {\n      if (existing[POS_VAL] !== value) {\n        existing[POS_VAL] = value;\n        updated[id] = true;\n      }\n    } else {\n      const row: ListingNodeRow = [null, id, value];\n\n      rows.push(row);\n    }\n  }\n\n  const allSorted = sortRows(rows);\n  const sorted = maxSize ? allSorted.slice(0, maxSize) : allSorted;\n  const missing = maxSize ? allSorted.slice(maxSize, allSorted.length) : [];\n  const added = R.filter(row => row[POS_IDX] === null, sorted);\n\n  toReplace = toReplace.concat(R.filter(row => row[POS_IDX] !== null, missing)).reverse();\n\n  for (let i = 0; i < sorted.length; i++) {\n    const id = sorted[i][POS_ID];\n    const idx = sorted[i][POS_IDX];\n    const val = sorted[i][POS_VAL];\n\n    if (idx !== null && updated[id || '']) changes[`${idx}`] = [id, val].join(',');\n  }\n\n  const inserted = [];\n\n  while (added.length) {\n    const row = added.pop();\n    const replaced = toReplace.pop();\n    let [idx] = replaced || [null];\n\n    if (idx === null) {\n      idx = maxIdx + inserted.length + 1;\n      inserted.push(idx);\n    }\n\n    if (row) changes[`${idx}`] = [row[POS_ID], row[POS_VAL]].join(',');\n  }\n\n  while (toReplace.length) {\n    const row = toReplace.pop();\n\n    if (row && !row[POS_ID]) {\n      const idx = `${row[POS_IDX]}`;\n\n      if (node[idx] !== null) {\n        changes[idx] = null;\n        console.log('nulling', idx, node[idx]);\n      }\n    }\n  }\n\n  return R.keys(changes).length ? changes : null;\n}\n\nconst unionRows = R.compose(\n  R.uniqBy(R.nth(POS_ID)),\n  sortRows,\n  R.reduce(\n    R.concat as (a: ListingNodeRow[], b: ListingNodeRow[]) => ListingNodeRow[],\n    [] as ListingNodeRow[]\n  ),\n  R.map(rows)\n);\n\nconst rowsFromSouls = query<ListingNodeRow[]>((scope: GunScope, souls: string[]) =>\n  Promise.all(R.map(scope.get, souls)).then(unionRows)\n);\n\nconst read = query((scope: GunScope, path: string, opts: { indexer?: string }) => {\n  const { indexer = Config.indexer } = opts || {};\n\n  return rowsFromSouls(scope, [soulFromPath(indexer, path)]).then(rowsToIds);\n}, 'listingRows');\n\nconst get = query(\n  (scope: GunScope, soul: string) => (soul ? scope.get(soul).then() : resolve(null)),\n  'listing'\n);\n\nexport const ListingNode = {\n  POS_IDX,\n  POS_ID,\n  POS_VAL,\n  source,\n  get,\n  getRow,\n  itemKeys,\n  rows,\n  ids,\n  idToSoul,\n  idsToSouls,\n  soulToId,\n  soulsToIds,\n  rowsToIds,\n  rowsToItems,\n  itemsToRows,\n  sortRows,\n  sortedIds,\n  soulFromPath,\n  pathFromSoul,\n  rowsFromSouls,\n  read,\n  diff,\n  unionRows\n};\n","/* globals Gun */\nimport * as R from 'ramda';\nimport { GunNodeType } from './types';\n\ndeclare const Gun: any;\n\nconst soul = R.pathOr('', ['_', '#']) as (node: GunNodeType) => string;\nconst state = R.pathOr({}, ['_', '>']) as (node: GunNodeType) => { [key: string]: number };\n\nconst latest = R.compose(\n  R.last as (res: number[]) => number,\n  R.sortBy(R.identity),\n  R.values as (state: any) => number[],\n  state\n);\n\nconst edges = R.compose(\n  R.map(R.propOr('', '#')),\n  R.values\n);\n\nconst diff = (existing: GunNodeType, updated: GunNodeType) => {\n  const changedKeys = R.without(['_'], R.keysIn(updated)).filter(k => {\n    const newVal = updated[k];\n    const oldVal = R.prop(k, existing);\n\n    return !R.equals(newVal, oldVal) && `${newVal}` !== `${oldVal}`;\n  });\n\n  return R.pick(changedKeys, updated);\n};\n\nfunction decodeSEA(rawData: GunNodeType) {\n  const data = rawData ? { ...rawData } : rawData;\n  const soul = R.pathOr('', ['_', '#'], data);\n\n  if (!soul || !Gun.SEA || soul.indexOf('~') === -1) return rawData;\n  R.without(['_'], R.keys(data)).forEach(key => {\n    Gun.SEA.verify(\n      Gun.SEA.opt.pack(rawData[key], key, rawData, soul),\n      false,\n      (res: any) => (data[key] = Gun.SEA.opt.unpack(res, key, rawData))\n    );\n  });\n  return data;\n}\n\nexport const GunNode = { soul, state, diff, latest, edges, decodeSEA };\n","import * as R from 'ramda';\nimport { Schema } from '../Schema';\nimport { GunNode } from '../GunNode';\nimport { GunNodeType } from '../types';\n\nconst souls = GunNode.edges;\nconst ids = R.compose(\n  R.filter(R.identity as (i: any) => boolean) as (i: string[]) => string[],\n  R.map<any, string>(\n    R.compose(\n      R.prop('thingId') as (i: any) => string,\n      Schema.Thing.route.match.bind(Schema.Thing.route)\n    )\n  ),\n  GunNode.edges\n);\n\nconst union = R.compose(\n  R.dissoc('_'),\n  R.reduce(R.mergeRight, {})\n) as (nodes: GunNodeType[]) => GunNodeType;\n\nfunction dayStr(timestamp: number | null | undefined) {\n  const d = new Date(timestamp || new Date().getTime());\n  const year = d.getUTCFullYear();\n  const month = d.getUTCMonth() + 1;\n  const dayNum = d.getUTCDate();\n\n  return `${year}/${month}/${dayNum}`;\n}\n\nexport const ThingSet = { ids, union, souls, dayStr };\n","import * as R from 'ramda';\nimport { parse as parseURI } from 'uri-js';\nimport { GunNodeType } from '../types';\nimport { Constants } from '../Constants';\n\nconst kind = R.propOr('submission', 'kind');\nconst body = R.propOr('', 'body');\nconst isCommand = R.compose(\n  R.test(Constants.COMMAND_RE),\n  body\n);\nconst url = R.propOr('', 'url');\nconst topic = R.propOr('', 'topic') as (node: GunNodeType) => string;\nconst domain = R.compose(\n  urlStr => {\n    if (!urlStr) return '';\n    const parsed = parseURI(urlStr);\n\n    return (parsed.host || parsed.scheme || '').replace(/^www\\./, '');\n  },\n  url as (node: GunNodeType) => string\n);\nconst authorId = R.propOr('', 'authorId');\nconst opId = R.propOr('', 'opId');\nconst replyToId = R.propOr('', 'replyToId');\n\nexport const ThingDataNode = {\n  kind,\n  body,\n  isCommand,\n  url,\n  topic,\n  domain,\n  authorId,\n  opId,\n  replyToId\n};\n","import * as R from 'ramda';\nimport { Promise } from 'gun-scope';\nimport objHash from 'object-hash';\nimport { parse as parseURI } from 'uri-js';\nimport { Schema } from '../Schema';\nimport { ThingSet } from './ThingSet';\nimport { ThingDataNodeType, ThingNode, GunChain } from '../types';\n\nexport { ThingSet } from './ThingSet';\nexport { ThingDataNode } from './ThingDataNode';\n\nconst topicPrefixes = {\n  chatmsg: 'chat:',\n  comment: 'comments:'\n};\n\nconst soulToId = R.compose(\n  R.propOr('', 'thingId'),\n  Schema.Thing.route.match.bind(Schema.Thing.route)\n);\n\nconst soulsToIds = R.map(soulToId);\n\nconst index = R.curry((peer, thingId, data) => {\n  if (!data.topic && !data.opId) return;\n\n  if (data.opId && !data.topic) {\n    peer.gun\n      .get(Schema.Thing.route.reverse({ thingId: data.opId }))\n      .get('data')\n      .on(function recv(this: GunChain, td: ThingDataNodeType) {\n        if (!td) return;\n        index(peer, thingId, { ...data, topic: td.topic || 'all' });\n        this.off();\n      });\n    return;\n  }\n\n  const thing = peer.gun.get(Schema.Thing.route.reverse({ thingId }));\n  const dayStr = ThingSet.dayStr(data.timestamp);\n  const [year, month, day] = dayStr.split('/');\n  const topicPrefix = R.propOr('', data.kind || '', topicPrefixes);\n  const baseTopicName = data.topic.toLowerCase().trim();\n  const topicName = topicPrefix + baseTopicName;\n  const topic = peer.gun.get(Schema.Topic.route.reverse({ topicName }));\n  const topicDay = peer.gun.get(Schema.TopicDay.route.reverse({ topicName, year, month, day }));\n\n  if (!data.skipAll && data.topic !== 'all') {\n    const allname = `${topicPrefix}all`;\n    const allTopic = peer.gun.get(Schema.Topic.route.reverse({ topicName: allname }));\n    const allTopicDay = peer.gun.get(\n      Schema.TopicDay.route.reverse({\n        topicName: allname,\n        year,\n        month,\n        day\n      })\n    );\n\n    allTopic.set(thing);\n    allTopicDay.set(thing);\n  }\n\n  if (data.kind === 'submission') {\n    const urlInfo = data.url ? parseURI(data.url) : {};\n    const domainName = (data.url\n      ? (urlInfo.host || urlInfo.scheme || '').replace(/^www\\./, '')\n      : `self.${data.topic}`\n    ).toLowerCase();\n    const domain = peer.gun.get(Schema.Domain.route.reverse({ domainName }));\n\n    domain.set(thing);\n\n    if (data.url) {\n      const urlNode = peer.gun.get(Schema.URL.route.reverse({ url: data.url }));\n\n      // thing.get(\"url\").put(urlNode);\n      urlNode.set(thing);\n    }\n  }\n\n  if (data.opId) {\n    const allcomments = peer.gun.get(Schema.ThingAllComments.route.reverse({ thingId: data.opId }));\n\n    allcomments.set(thing);\n  }\n\n  if (data.replyToId || data.opId) {\n    const comments = peer.gun.get(\n      Schema.ThingComments.route.reverse({\n        thingId: data.replyToId || data.opId\n      })\n    );\n\n    comments.set(thing);\n  }\n\n  topic.set(thing);\n  topicDay.set(thing);\n});\n\nconst put = R.curry((peer, data) => {\n  data.timestamp = data.timestamp || new Date().getTime(); // eslint-disable-line\n  const originalHash = objHash(data);\n  const { timestamp, kind, topic, authorId, opId, replyToId } = data;\n  const thingId = objHash({\n    timestamp,\n    kind,\n    topic,\n    authorId,\n    opId,\n    replyToId,\n    originalHash\n  });\n\n  const node = peer.gun.get(Schema.Thing.route.reverse({ thingId }));\n  const dataSoul = authorId\n    ? Schema.ThingDataSigned.route.reverse({ thingId, authorId })\n    : Schema.ThingData.route.reverse({ thingId: originalHash });\n\n  const metaData: ThingNode = {\n    id: thingId,\n    timestamp,\n    kind,\n    originalHash,\n    data: { '#': dataSoul as string },\n    votesup: { '#': Schema.ThingVotesUp.route.reverse({ thingId }) as string },\n    votesdown: { '#': Schema.ThingVotesDown.route.reverse({ thingId }) as string },\n    allcomments: { '#': Schema.ThingAllComments.route.reverse({ thingId }) as string },\n    comments: { '#': Schema.ThingComments.route.reverse({ thingId }) as string }\n  };\n\n  if (topic) metaData.topic = { '#': Schema.Topic.route.reverse({ topicName: topic }) as string };\n  if (authorId) metaData.author = { '#': `~${authorId}` };\n  if (opId) metaData.op = { '#': Schema.Thing.route.reverse({ thingId: opId }) as string };\n  if (replyToId) {\n    metaData.replyTo = {\n      '#': Schema.Thing.route.reverse({ thingId: replyToId }) as string\n    };\n  }\n  peer.gun.get(dataSoul).put(data);\n  node.put(metaData);\n  index(peer, thingId, data);\n  return node;\n});\n\nconst submit = R.curry((peer, data) => {\n  const timestamp = data.timestamp || new Date().getTime();\n  const user = peer.isLoggedIn();\n\n  if (data.topic) data.topic = data.topic.toLowerCase().trim(); // eslint-disable-line\n  if (data.domain) data.domain = data.domain.toLowerCase().trim(); // eslint-disable-line\n  if (user) {\n    data.author = user.alias; // eslint-disable-line\n    data.authorId = user.pub; // eslint-disable-line\n  }\n\n  const thing = put(peer, { ...data, timestamp, kind: 'submission' });\n\n  if (user) {\n    const thingsSoul = Schema.AuthorThings.route.reverse({\n      authorId: user.pub\n    });\n    const submissionsSoul = Schema.AuthorSubmissions.route.reverse({\n      authorId: user.pub\n    });\n    const things = peer.gun.get(thingsSoul);\n    const submissions = peer.gun.get(submissionsSoul);\n\n    peer.gun\n      .user()\n      .get('things')\n      .put(things);\n    peer.gun\n      .user()\n      .get('submissions')\n      .put(submissions);\n    things.set(thing);\n    submissions.set(thing);\n  }\n\n  return thing;\n});\n\nconst comment = R.curry((peer, data) => {\n  const user = peer.isLoggedIn();\n\n  if (data.topic) data.topic = data.topic.toLowerCase().trim(); // eslint-disable-line\n  if (user) {\n    data.author = user.alias; // eslint-disable-line\n    data.authorId = user.pub; // eslint-disable-line\n  }\n\n  const thing = put(peer, { ...data, kind: 'comment' });\n\n  if (user) {\n    const thingsSoul = Schema.AuthorThings.route.reverse({\n      authorId: user.pub\n    });\n    const commentsSoul = Schema.AuthorComments.route.reverse({\n      authorId: user.pub\n    });\n    const things = peer.gun.get(thingsSoul);\n    const comments = peer.gun.get(commentsSoul);\n\n    peer.gun\n      .user()\n      .get('things')()\n      .put(things);\n    peer.gun\n      .user()\n      .get('comments')\n      .put(comments);\n    things.set(thing);\n    comments.set(thing);\n  }\n\n  return thing;\n});\n\nconst chat = R.curry((peer, data) => {\n  const user = peer.isLoggedIn();\n\n  if (data.topic) data.topic = data.topic.toLowerCase().trim(); // eslint-disable-line\n  if (user) {\n    data.author = user.alias; // eslint-disable-line\n    data.authorId = user.pub; // eslint-disable-line\n  }\n\n  const thing = put(peer, { ...data, kind: 'chatmsg' });\n\n  if (user) {\n    const thingsSoul = Schema.AuthorThings.route.reverse({\n      authorId: user.pub\n    });\n    const things = peer.gun.get(thingsSoul);\n\n    peer.gun\n      .user()\n      .get('things')\n      .put(things);\n    things.set(thing);\n  }\n\n  return thing;\n});\n\nconst writePage = R.curry((peer, name, body) => {\n  const user = peer.isLoggedIn();\n\n  if (!user) return Promise.reject('not logged in');\n  let thing;\n  const pagesSoul = Schema.AuthorPages.route.reverse({ authorId: user.pub });\n  const chain = peer.gun.get(pagesSoul).get(name);\n\n  return chain.then((res: ThingNode) => {\n    if (res && res.data) {\n      chain\n        .get('data')\n        .get('body')\n        .put(body);\n    } else {\n      const data = {\n        body,\n        title: name,\n        kind: 'wikipage',\n        author: user.alias,\n        authorId: user.pub\n      };\n\n      thing = put(peer, data);\n      chain.put(thing);\n    }\n  });\n});\n\nconst vote = R.curry((peer, id, kind, nonce) => {\n  const votes = peer.gun.get(\n    Schema[kind === 'up' ? 'ThingVotesUp' : 'ThingVotesDown'].route.reverse({\n      thingId: id\n    })\n  );\n\n  return votes.get(nonce).put('1');\n});\n\nexport const Thing = {\n  soulToId,\n  soulsToIds,\n  put,\n  submit,\n  comment,\n  chat,\n  writePage,\n  vote,\n  index\n};\n","import * as R from 'ramda';\nimport { scope as makeScope, query, all, resolve } from 'gun-scope';\nimport { Config } from './Config';\nimport { Schema } from './Schema';\nimport { ListingNode } from './Listing/ListingNode';\nimport {\n  CombinedThingType,\n  ThingNode,\n  GunScope,\n  GunNodeType,\n  ThingDataNodeType,\n  ThingDataMap\n} from './types';\nimport { ThingDataNode } from './Thing';\n\nconst thing = query<CombinedThingType | null>((scope, thingSoul) =>\n  scope.get(thingSoul).then((meta: ThingNode) => {\n    if (!meta || !meta.id) return null;\n    const result: CombinedThingType = {\n      id: meta.id,\n      timestamp: parseFloat(meta.timestamp as string)\n    };\n    const replyToSoul: string = R.pathOr('', ['replyTo', '#'], meta);\n    const opSoul: string = R.pathOr('', ['op', '#'], meta);\n    const opId: string = R.propOr('', 'thingId', opSoul && Schema.Thing.route.match(opSoul));\n    const replyToId: string = R.propOr(\n      '',\n      'thingId',\n      replyToSoul && Schema.Thing.route.match(replyToSoul)\n    );\n\n    if (opId) result.opId = opId;\n    if (replyToId) result.replyToId = replyToId;\n    return result;\n  })\n);\n\nconst thingDataFromSouls = R.curry((scope: GunScope, souls: string[] | null) => {\n  const ids = ListingNode.soulsToIds(souls || []);\n\n  return all<[string, ThingDataNodeType][]>(\n    R.map(id => thingData(scope, id).then(data => [id, data]), ids)\n  ).then((pairs: [string, ThingDataNodeType][]) =>\n    pairs.reduce((res, [id, data]) => R.assoc(id, data, res), {} as ThingDataMap)\n  );\n});\n\nconst thingScores = query((scope, thingId, tabulator = '') => {\n  if (!thingId) return resolve(null);\n  return scope\n    .get(\n      Schema.ThingVoteCounts.route.reverse({\n        thingId,\n        tabulator: tabulator || Config.tabulator\n      })\n    )\n    .then();\n});\n\nconst thingData = query<ThingDataNodeType | null>((scope, thingId) => {\n  return thingId ? scope.get(Schema.Thing.route.reverse({ thingId })).get('data') : resolve(null);\n});\n\nconst thingMeta = query<CombinedThingType | null>(\n  (scope, { thingSoul, tabulator, data = false, scores = false }) => {\n    if (!thingSoul) return resolve(null);\n    const id = ListingNode.soulToId(thingSoul);\n\n    return all<[CombinedThingType, GunNodeType, GunNodeType]>([\n      thing(scope, thingSoul),\n      scores ? thingScores(scope, id, tabulator) : resolve(null),\n      data ? thingData(scope, id) : resolve(null)\n    ]).then(([meta, votes, data]) => {\n      if (!meta || !meta.id) return null;\n      return { ...meta, votes, data };\n    });\n  }\n);\n\nconst thingForDisplay = query(\n  (scope, thingId, tabulator = null) =>\n    Promise.all([thingData(scope, thingId), thingScores(scope, thingId, tabulator)]).then(\n      ([data, scores]) => {\n        const opId = ThingDataNode.opId(data);\n        if (!opId) return { data, scores };\n        return thingData(scope, opId).then(opData => ({\n          data,\n          scores,\n          opData\n        }));\n      }\n    ),\n  'thing'\n);\n\nconst multiThingMeta = query((scope, params) =>\n  all(\n    R.reduce(\n      (promises, thingSoul) => {\n        if (!thingSoul) return promises;\n        promises.push(thingMeta(scope, { ...params, thingSoul }));\n        return promises;\n      },\n      [] as PromiseLike<CombinedThingType | null>[],\n      R.propOr([], 'thingSouls', params)\n    )\n  )\n);\n\nconst userPages = query(\n  (scope, authorId) => scope.get(Schema.AuthorPages.route.reverse({ authorId })),\n  'userPages'\n);\n\nconst wikiPageId = query((scope, authorId, name) => {\n  if (!authorId || !name) return resolve(null);\n  return scope\n    .get(Schema.AuthorPages.route.reverse({ authorId }))\n    .get(name)\n    .get('id');\n}, 'wikiPageId');\n\nconst wikiPage = query<ThingDataNodeType | null>((scope, authorId, name) =>\n  wikiPageId(scope, authorId, name)\n    .then(id => id && thingForDisplay(scope, id))\n    .then(R.propOr(null, 'data') as (x: any) => ThingDataNodeType | null)\n);\n\nconst userMeta = query((scope, id) => {\n  if (!id) return resolve(null);\n  return scope.get(`~${id}`).then((meta: GunNodeType) => ({\n    alias: R.prop('alias', meta),\n    createdAt: R.path(['_', '>', 'pub'], meta)\n  }));\n}, 'userMeta');\n\nconst createScope = R.curry((nab, opts) => makeScope(R.assoc('gun', nab.gun, opts || {})));\n\nexport const Query = {\n  thingMeta,\n  multiThingMeta,\n  thingScores,\n  thingData,\n  thingDataFromSouls,\n  thingForDisplay,\n  userPages,\n  wikiPageId,\n  wikiPage,\n  userMeta,\n  createScope\n};\n","import * as R from 'ramda';\n\nconst signup = R.curry(\n  (peer, username, password, opts = {}) =>\n    new Promise((ok, fail) => {\n      if (peer && peer.gun && peer.gun.user) {\n        const user = peer.gun.user();\n        ok(\n          user.create(\n            username,\n            password,\n            (ack: any) => {\n              if (ack.err) {\n                fail(ack.err);\n                user.leave();\n                peer.gun.user().leave();\n              } else {\n                peer.login(username, password).then(ok);\n              }\n            },\n            opts\n          )\n        );\n      } else {\n        fail('SEA is not loaded');\n      }\n    })\n);\n\nconst login = R.curry((peer, username, password) =>\n  new Promise((ok, fail) => {\n    if (peer && peer.gun && peer.gun.user) {\n      const user = peer.gun.user();\n\n      user.auth(username, password, (ack: any) =>\n        ack.err ? fail(ack.err) : ok(peer.gun.user().is)\n      );\n    } else {\n      fail('SEA is not loaded');\n    }\n  }).then(result => {\n    peer._onLogin && peer._onLogin(result); // eslint-disable-line\n    return result;\n  })\n);\n\nconst logout = (peer: any) => peer.gun.user().leave();\nconst isLoggedIn = (peer: any) => peer.gun && peer.gun.user && peer.gun.user().is;\nconst onLogin = R.curry((peer, fn) => (peer._onLogin = fn)); // eslint-disable-line\n\nexport const Authentication = {\n  signup,\n  login,\n  logout,\n  isLoggedIn,\n  onLogin\n};\n","import * as R from 'ramda';\n\nconst tokenize = (source: string) => {\n  const tokenMap = (source || '').split('\\n').reduce((def, line) => {\n    const tokens = line\n      .trim()\n      .split(' ')\n      .map(R.trim)\n      .filter(x => x);\n\n    if (!tokens.length) return def;\n    return R.assocPath(tokens, {}, def);\n  }, {});\n\n  const isPresent = (p: string | string[]) => {\n    let check = p;\n\n    if (typeof p === 'string') check = p.split(' ');\n    return check && R.path(check as string[], tokenMap);\n  };\n\n  const getValues = (p: string | string[]): string[] => R.keysIn(isPresent(p));\n  const getValue = (p: string | string[]): string | null => getValues(p)[0] || null;\n  const getLastValue = (p: string | string[]) => getValues(p).pop() || null;\n\n  const getValueChain = (p: string | string[]) => {\n    const keys = typeof p === 'string' ? p.split(' ') : p;\n    const values = [];\n    let next = 'start';\n\n    while (next) {\n      next = getValue([...keys, ...values]) || '';\n      next && values.push(next);\n    }\n\n    return values;\n  };\n\n  const getPairs = (p: string | string[]) => {\n    const keys = typeof p === 'string' ? p.split(' ') : p;\n\n    return getValues(keys).reduce((pairs: any[], key: string) => {\n      const val = getValue([...keys, key]);\n\n      return [...pairs, [key, val]];\n    }, []);\n  };\n\n  return {\n    source,\n    isPresent,\n    getValue,\n    getValues,\n    getLastValue,\n    getValueChain,\n    getPairs\n  };\n};\n\nexport const Tokenizer = { tokenize };\n","import * as R from 'ramda';\nimport { Tokenizer } from '../Tokenizer';\nimport { Config } from '../Config';\nimport { ListingDefinitionType } from '../types';\n\nconst fromSource = (source: string, ownerId = '', spaceName = '') => {\n  const tokenized = Tokenizer.tokenize(source);\n  const obj: ListingDefinitionType = { ...tokenized };\n  const { isPresent, getValue, getValues, getValueChain, getPairs } = tokenized;\n\n  [\n    obj.fromPageAuthor = ownerId,\n    obj.fromPageName = spaceName ? `space:${spaceName}` : undefined\n  ] = getValueChain('sourced from page');\n  obj.displayName = tokenized.getValue('name') || spaceName;\n  obj.indexer = getValue('tabulator') || Config.indexer;\n  obj.tabulator = getValue('tabulator') || obj.indexer;\n  obj.tabs = getPairs('tab');\n  obj.sort = getValue('sort');\n\n  // TODO: breaks with custom names\n  if (obj.sort === 'default') obj.sort = getValue('tab');\n\n  obj.uniqueByContent = !!isPresent('unique by content');\n  obj.curators = getValues('curator');\n  obj.moderators = getValues('mod');\n  obj.includeRanks = !!isPresent('show ranks');\n  obj.stickyIds = getValues('sticky');\n  obj.isIdSticky = (id: string) => !!tokenized.isPresent(['sticky', id]);\n  obj.isChat = !!isPresent('display as chat');\n  obj.submitTopics = getValues('submit to');\n  obj.submitTopic = getValue('submit to');\n  obj.chatTopic = getValue('chat in');\n\n  if (ownerId && spaceName) {\n    obj.spaceName = spaceName;\n    obj.owner = ownerId;\n    obj.useForComments = !tokenized.isPresent('comments leave space');\n    obj.basePath = `/user/${ownerId}/spaces/${spaceName}`;\n    if (obj.submitTopic) obj.submitPath = `${obj.basePath}/submit`;\n    obj.defaultTab = tokenized.getValue('tab');\n    obj.defaultTabPath = obj.defaultTab ? tokenized.getValue(['tab', obj.defaultTab]) : null;\n  }\n\n  obj.filters = {\n    functions: [],\n    allow: {\n      repliesTo: getValue('replies to author'),\n      type: getValue('type'), // TODO: this field seems redundant with kind and should be deprecated\n      ops: getValues('op'),\n      aliases: getValues('alias'),\n      authors: getValues('author'),\n      domains: getValues('domain'),\n      topics: getValues('topic'),\n      listings: getValues('listing'),\n      kinds: getValues('kind'),\n      anon: !isPresent('require signed'),\n      signed: !isPresent('require anon')\n    },\n    deny: {\n      aliases: getValues('ban alias'),\n      authors: getValues('ban author'),\n      domains: getValues('ban domain'),\n      topics: getValues('ban topic'),\n      anon: !!isPresent('require signed'),\n      signed: !!isPresent('require anon'),\n      tags: getPairs('can remove')\n    }\n  };\n\n  obj.voteFilters = {\n    functions: [],\n    upsMin: parseInt(getValue('ups above') || '', 10) || null,\n    upsMax: parseInt(getValue('ups below') || '', 10) || null,\n    downsMin: parseInt(getValue('downs above') || '', 10) || null,\n    downsMax: parseInt(getValue('downs below') || '', 10) || null,\n    scoreMin: parseInt(getValue('score above') || '', 10) || null,\n    scoreMax: parseInt(getValue('score below') || '', 10) || null\n  };\n\n  obj.censors = R.uniq(R.map<any[], string>(R.nth(1), obj.filters.deny.tags));\n  return obj;\n};\n\nexport const ListingDefinition = { fromSource };\n","import * as R from 'ramda';\nimport { ListingDefinitionType } from '../types';\n\nconst needsScores = (definition: ListingDefinitionType) =>\n  !!R.find(definition.isPresent, [\n    'sort hot',\n    'sort top',\n    'sort best',\n    'sort controversial',\n    'ups',\n    'downs',\n    'score',\n    'can remove'\n  ]);\n\nconst needsData = (definition: ListingDefinitionType) =>\n  !!R.find(definition.isPresent, [\n    'topic',\n    'domain',\n    'author',\n    'unique by content',\n    'kind',\n    'type',\n    'require signed',\n    'require anon',\n    'alias',\n    'ban domain',\n    'ban topic',\n    'ban author',\n    'ban alias'\n  ]);\n\nconst listingSource = (definition: ListingDefinitionType) => {\n  const listings = R.pathOr([], ['filters', 'allow', 'listings'], definition);\n  const { sort } = definition;\n  const listingPaths = R.map(l => `${l}/${sort}`, listings);\n\n  return { listingPaths };\n};\n\nconst topicSource = (definition: ListingDefinitionType) => {\n  const { sort } = definition;\n  const topics = R.pathOr([], ['filters', 'allow', 'topics'], definition);\n\n  if (!topics.length) topics.push('all');\n  const listingPaths = R.map(t => `/t/${t}/${sort}`, topics);\n\n  return { listingPaths };\n};\n\nconst domainSource = (definition: ListingDefinitionType) => {\n  const { sort } = definition;\n  const domains = R.pathOr([], ['filters', 'allow', 'domains'], definition);\n\n  if (!domains.length) return topicSource(definition);\n  const listingPaths = R.map(d => `/domain/${d}/${sort}`, domains);\n\n  return { listingPaths };\n};\n\nconst authorSource = (definition: ListingDefinitionType) => {\n  const { sort } = definition;\n  const authorIds = R.pathOr([], ['filters', 'allow', 'authors'], definition);\n  const type = R.path(['filters', 'allow', 'type'], definition);\n\n  if (!authorIds.length) return topicSource(definition);\n  const listingPaths = R.map(id => `/user/${id}/${type}/${sort}`, authorIds);\n\n  return { listingPaths };\n};\n\nconst curatorSource = (definition: ListingDefinitionType) => {\n  const { sort } = definition;\n  const curators = R.prop('curators', definition) || [];\n\n  if (!curators.length) return topicSource(definition);\n  const listingPaths = R.map(id => `/user/${id}/commented/${sort}`, curators);\n\n  return { listingPaths };\n};\n\nconst opSource = (definition: ListingDefinitionType) => {\n  const { sort } = definition;\n  const submissionIds = R.pathOr([], ['filters', 'allow', 'ops'], definition);\n\n  if (!submissionIds.length) topicSource(definition);\n  const listingPaths = R.map(id => `/things/${id}/comments/${sort}`, submissionIds);\n\n  return { listingPaths };\n};\n\nconst repliesSource = (definition: ListingDefinitionType) => {\n  const { sort } = definition;\n  const id = R.path(['filters', 'allow', 'repliesTo'], definition);\n  const type = R.path(['filters', 'allow', 'type'], definition);\n\n  const listingPaths = [`/user/${id}/replies/${type}/${sort}`];\n\n  return { listingPaths };\n};\n\nconst sources = {\n  listing: listingSource,\n  replies: repliesSource,\n  op: opSource,\n  curator: curatorSource,\n  author: authorSource,\n  domain: domainSource,\n  topic: topicSource\n};\n\nconst sourceNames = R.keys(sources);\nconst sourceName = (def: ListingDefinitionType) => R.find(def.isPresent, sourceNames) || 'topic';\nconst fromDefinition = (definition: ListingDefinitionType) => {\n  const name = sourceName(definition);\n\n  return R.mergeLeft({ name }, sources[name](definition));\n};\n\nexport const ListingDataSource = {\n  fromDefinition,\n  sources,\n  needsScores,\n  needsData\n};\n","import * as R from 'ramda';\nimport { all, resolve } from 'gun-scope';\nimport { Constants } from '../Constants';\nimport { Schema } from '../Schema';\nimport { Query } from '../Query';\nimport { ThingDataNode } from '../Thing';\nimport { ListingNode } from './ListingNode';\nimport { ListingDataSource } from './ListingDataSource';\nimport {\n  ListingDefinitionType,\n  ListingNodeRow,\n  GunScope,\n  ListingSpecType,\n  CombinedThingType\n} from '../types';\n\nconst intPath = (p: string[]) =>\n  R.compose(\n    parseInt,\n    R.pathOr('', p)\n  );\n\ntype FilterFunction = (thing: CombinedThingType) => boolean;\n\nconst fromDefinition = (definition: ListingDefinitionType) => {\n  const { filters, voteFilters, isPresent } = definition;\n  const filterFunctions: FilterFunction[] = [];\n  const voteFilterFunctions: FilterFunction[] = [];\n  const addFilter = (...fns: Function[]) =>\n    filterFunctions.push(R.compose(...(fns as [FilterFunction])));\n  const addVoteFilter = (...fns: Function[]) =>\n    voteFilterFunctions.push(R.compose(...(fns as [FilterFunction])));\n\n  if (filters.allow.aliases.length) {\n    addFilter((t: string) => !!isPresent(['alias', t]), R.path(['data', 'author']));\n  }\n  if (filters.allow.authors.length) {\n    addFilter((t: string) => !!isPresent(['author', t]), R.path(['data', 'authorId']));\n  }\n  if (filters.allow.domains.length) {\n    addFilter((t: string) => !!isPresent(['domain', t]), ThingDataNode.domain, R.prop('data'));\n  }\n\n  if (\n    filters.allow.topics.length &&\n    !R.find(\n      R.compose(\n        R.identical('all'),\n        R.last as (strs: string[]) => string,\n        R.split(':')\n      ),\n      filters.allow.topics as string[]\n    )\n  ) {\n    addFilter((item: CombinedThingType) => {\n      let topic = R.path(['data', 'topic'], item);\n      const kind = R.path(['data', 'kind'], item);\n\n      if (kind === 'chatmsg') topic = `chat:${topic}`;\n      if (kind === 'comment') topic = `comments:${topic}`;\n      return !!isPresent(['topic', topic]);\n    });\n  }\n\n  if (filters.allow.kinds.length) {\n    addFilter((kind: string) => !!isPresent(['kind', kind]), R.path(['data', 'kind']));\n  }\n  if (filters.allow.type === 'commands') {\n    addFilter(\n      R.compose(\n        R.test(Constants.COMMAND_RE),\n        R.pathOr('', ['data', 'body'])\n      )\n    );\n  }\n\n  if (filters.deny.aliases.length) {\n    addFilter((alias: string) => !isPresent(['ban', 'alias', alias]), R.path(['data', 'author']));\n  }\n  if (filters.deny.authors.length) {\n    addFilter(\n      (authorId: string) => !isPresent(['ban', 'author', authorId]),\n      R.path(['data', 'authorId'])\n    );\n  }\n  if (filters.deny.domains.length) {\n    addFilter(\n      (domain: string) => !domain || !isPresent(['ban', 'domain', domain]),\n      ThingDataNode.domain\n    );\n  }\n  if (filters.deny.topics.length) {\n    addFilter((topic: string) => !isPresent(['ban', 'topic', topic]), R.path(['data', 'topic']));\n  }\n  if (filters.deny.anon) addFilter(R.path(['data', 'authorId']));\n  if (filters.deny.signed) {\n    addFilter(\n      R.compose(\n        authorId => !authorId,\n        R.pathOr('', ['data', 'authorId'])\n      )\n    );\n  }\n\n  if (voteFilters.upsMin !== null) {\n    addVoteFilter(R.lte(voteFilters.upsMin), intPath(['votes', 'up']));\n  }\n  if (voteFilters.upsMax !== null) {\n    addVoteFilter(R.gte(voteFilters.upsMax), intPath(['votes', 'up']));\n  }\n  if (voteFilters.downsMin !== null) {\n    addVoteFilter(R.lte(voteFilters.downsMin), intPath(['votes', 'down']));\n  }\n  if (voteFilters.downsMax !== null) {\n    addVoteFilter(R.gte(voteFilters.downsMax), intPath(['votes', 'down']));\n  }\n  if (voteFilters.scoreMin !== null) {\n    addVoteFilter(R.lte(voteFilters.scoreMin), intPath(['votes', 'score']));\n  }\n  if (voteFilters.scoreMax !== null) {\n    addVoteFilter(R.gte(voteFilters.scoreMax), intPath(['votes', 'score']));\n  }\n\n  if (filters.deny.tags.length) {\n    addVoteFilter((thing: CombinedThingType) => {\n      const cmds = R.path(['votes', 'commands'], thing) || {};\n\n      return !filters.deny.tags.find(\n        ([tagName, authorId]: [string, string]) => !!R.path([authorId, 'tag', tagName], cmds)\n      );\n    });\n  }\n\n  const contentFilter = (thing: CombinedThingType) => !filterFunctions.find(fn => !fn(thing));\n  const voteFilter = (thing: CombinedThingType) => !voteFilterFunctions.find(fn => !fn(thing));\n  const thingFilter = (thing: CombinedThingType) =>\n    definition.isIdSticky(R.propOr('', 'id', thing)) || (contentFilter(thing) && voteFilter(thing));\n  return { thingFilter, contentFilter, voteFilter };\n};\n\ntype FilterFnType = (id: string) => Promise<boolean>;\n\ninterface GetRowsParams {\n  limit?: string;\n  count?: string;\n  after?: string;\n  filterFn: FilterFnType;\n}\n\nconst getFilteredRows = async (\n  scope: GunScope,\n  spec: ListingSpecType,\n  sortedRows: ListingNodeRow[],\n  params?: GetRowsParams\n): Promise<ListingNodeRow[]> => {\n  const {\n    limit: limitProp = '25',\n    count: countProp = '0',\n    after = null,\n    filterFn = R.always(resolve(true))\n  } = params || {};\n  const limit = parseInt(limitProp, 10);\n  const count = parseInt(countProp, 10) || 0;\n  const rows = sortedRows.slice();\n  const filtered: ListingNodeRow[] = [];\n  const data: any[] = [];\n  const fetchBatch = (size = 30) =>\n    all(\n      R.map(async row => {\n        let inListing = true;\n\n        if (!row[ListingNode.POS_ID]) {\n          console.log('blankRow', row);\n          return;\n        }\n\n        if (filterFn) inListing = await filterFn((row[ListingNode.POS_ID] as string) || '');\n        if (inListing) {\n          if (spec.uniqueByContent) {\n            const itemData = await Query.thingData(scope, row[ListingNode.POS_ID]);\n            const url = ThingDataNode.url(itemData);\n\n            if (\n              url &&\n              R.find(\n                R.compose(\n                  R.equals(url),\n                  ThingDataNode.url\n                ),\n                data\n              )\n            ) {\n              return;\n            }\n            data.push(itemData);\n          }\n          filtered.push(row);\n        }\n      }, rows.splice(count, size))\n    );\n\n  while (rows.length > count) {\n    const res = await fetchBatch();\n    if (limit && filtered.length >= limit) break;\n  }\n\n  return R.compose(\n    limit\n      ? (R.slice(0, limit) as (rows: ListingNodeRow[]) => ListingNodeRow[])\n      : (R.identity as (rows: ListingNodeRow[]) => ListingNodeRow[]),\n    R.sortBy(R.nth(ListingNode.POS_VAL) as (row: ListingNodeRow) => number) as (\n      row: ListingNodeRow[]\n    ) => ListingNodeRow[],\n    R.always(filtered) as () => ListingNodeRow[]\n  )();\n};\n\nconst getFilteredIds: (\n  scope: GunScope,\n  spec: ListingSpecType,\n  sortedRows: ListingNodeRow[],\n  params?: GetRowsParams\n) => Promise<string[]> = R.compose(\n  x => x.then(R.map(R.nth(ListingNode.POS_ID) as (row: ListingNodeRow) => string)),\n  getFilteredRows\n);\n\nconst thingFilter = R.curry(\n  (scope, spec, thingId): Promise<boolean> => {\n    if (spec.isIdSticky(thingId)) return resolve(true);\n\n    return Query.thingMeta(scope, {\n      tabulator: spec.tabulator,\n      thingSoul: Schema.Thing.route.reverse({ thingId }),\n      scores: ListingDataSource.needsScores(spec),\n      data: ListingDataSource.needsData(spec)\n    }).then(spec.thingFilter);\n  }\n);\n\nexport const ListingFilter = {\n  fromDefinition,\n  getFilteredRows,\n  getFilteredIds,\n  thingFilter\n};\n","import * as R from 'ramda';\nimport { query } from 'gun-scope';\nimport { Query } from '../Query';\nimport { ThingDataNode } from '../Thing';\nimport { ListingDefinition } from './ListingDefinition';\nimport { ListingDataSource } from './ListingDataSource';\nimport { ListingFilter } from './ListingFilter';\nimport { ListingSpecType, ListingDefinitionType } from '../types';\n\nconst fromSource = R.compose(\n  R.apply(R.mergeLeft) as (l: any) => ListingSpecType,\n  R.juxt([ListingFilter.fromDefinition, R.identity]),\n  R.apply(R.assoc('dataSource')) as (l: any) => ListingDefinitionType,\n  R.juxt([ListingDataSource.fromDefinition, R.identity]),\n  ListingDefinition.fromSource\n) as (source: string, ownerId?: string, spaceName?: string) => ListingSpecType;\n\nconst getSource = query<string>((scope, authorId, name, extra = '') =>\n  Query.wikiPage(scope, authorId, name).then(\n    R.compose(\n      body => `${body}\n# added by indexer\n${extra || ''}\nsourced from page ${authorId} ${name}\n`,\n      ThingDataNode.body\n    )\n  )\n);\n\nexport const ListingSpec = { fromSource, getSource };\n","import * as R from 'ramda';\nimport { query, resolve } from 'gun-scope';\nimport { Schema } from '../Schema';\nimport { Query } from '../Query';\nimport { SortDataRow, CombinedThingType } from '../types';\n\nconst [POS_ID, POS_VAL] = [0, 1];\nconst toIds = R.map(R.nth(POS_ID));\nconst sortItems = R.sortBy(R.nth(POS_VAL) as (row: SortDataRow) => number);\n\nconst voteSort = (fn: (thing: CombinedThingType | null) => number) =>\n  query<number>((scope, thingId, spec) => {\n    if (spec.isIdSticky(thingId)) return resolve(-Infinity);\n    if (R.includes(thingId, spec.filters.allow.ops)) return resolve(-Infinity);\n\n    return Query.thingMeta(scope, {\n      tabulator: spec.tabulator,\n      scores: true,\n      thingSoul: Schema.Thing.route.reverse({ thingId })\n    }).then(fn);\n  });\n\nconst timeSort = (fn: (thing: CombinedThingType | null) => number) =>\n  query<number>((scope, thingId, spec) =>\n    Query.thingMeta(scope, {\n      tabulator: spec.tabulator,\n      thingSoul: Schema.Thing.route.reverse({ thingId })\n    }).then(fn)\n  );\n\nconst sorts = {\n  new: timeSort(\n    R.compose(\n      R.multiply(-1),\n      parseInt,\n      R.propOr(0, 'timestamp')\n    )\n  ),\n  top: voteSort(\n    R.compose(\n      (x: string) => -1 * parseInt(x, 10),\n      R.pathOr('0', ['votes', 'score'])\n    )\n  ),\n  comments: voteSort(\n    R.compose(\n      (x: string) => -1 * parseFloat(x),\n      R.pathOr('0', ['votes', 'comment'])\n    )\n  ),\n  discussed: voteSort(thing => {\n    const timestamp = parseInt(R.propOr('', 'timestamp', thing), 10);\n    const score = parseInt(R.pathOr(0, ['votes', 'comment'], thing), 10);\n    const seconds = timestamp / 1000 - 1134028003;\n    const order = Math.log10(Math.max(Math.abs(score), 1));\n\n    if (!score) return 1000000000 - seconds;\n    return -1 * (order + seconds / 45000);\n  }),\n  hot: voteSort(thing => {\n    const timestamp = parseInt(R.propOr('', 'timestamp', thing), 10);\n    const score = parseInt(R.pathOr(0, ['votes', 'score'], thing), 10);\n    const seconds = timestamp / 1000 - 1134028003;\n    const order = Math.log10(Math.max(Math.abs(score), 1));\n    let sign = 0;\n\n    if (score > 0) {\n      sign = 1;\n    } else if (score < 0) {\n      sign = -1;\n    }\n    return -1 * (sign * order + seconds / 45000);\n  }),\n  best: voteSort(thing => {\n    const ups = parseInt(R.pathOr(0, ['votes', 'up'], thing), 10);\n    const downs = parseInt(R.pathOr(0, ['votes', 'down'], thing), 10);\n    const n = ups + downs;\n\n    if (n === 0) return 0;\n    const z = 1.281551565545; // 80% confidence\n    const p = ups / n;\n    const left = p + (1 / (2 * n)) * z * z;\n    const right = z * Math.sqrt((p * (1 - p)) / n + (z * z) / (4 * n * n));\n    const under = 1 + (1 / n) * z * z;\n\n    return -1 * ((left - right) / under);\n  }),\n  controversial: voteSort(thing => {\n    const ups = parseInt(R.pathOr(0, ['votes', 'up'], thing), 10);\n    const downs = parseInt(R.pathOr(0, ['votes', 'down'], thing), 10);\n\n    if (ups <= 0 || downs <= 0) return 0;\n    const magnitude = ups + downs;\n    const balance = ups > downs ? downs / ups : ups / downs;\n\n    return -1 * magnitude ** balance;\n  })\n};\n\nconst isValidSort = (sort: string) => !!(sort in sorts);\n\nexport const ListingSort = {\n  POS_ID,\n  POS_VAL,\n  sorts,\n  isValidSort,\n  toIds,\n  sortItems\n};\n","import * as R from 'ramda';\nimport Route from 'route-parser';\n\nconst splitDomains = R.compose(\n  R.sortBy(R.identity) as (i: any[]) => string[],\n  R.filter(R.identity as (i: any) => boolean),\n  R.map(R.trim),\n  R.split('+'),\n  R.toLower,\n  R.defaultTo('') as (i: string | undefined) => string\n);\n\nconst splitTopics = R.compose(\n  R.ifElse(R.prop('length'), R.identity, R.always(['all'])),\n  splitDomains\n) as (topic: string) => string[];\n\nconst withRoute = (obj: any) => R.assoc('route', new Route(obj.path), obj);\n\nexport const Path = { splitDomains, splitTopics, withRoute };\n","import * as R from 'ramda';\nimport { query } from 'gun-scope';\nimport { ListingSpecType, GunScope } from '../../types';\nimport { Config } from '../../Config';\nimport { Path } from '../Path';\nimport { ListingSpec } from '../ListingSpec';\n\nconst path = '/t/:topic/:sort';\nconst tabs = ['hot', 'new', 'discussed', 'controversial', 'top', 'firehose'];\n\nconst getSource = query<string>(\n  (scope: GunScope, { topic, sort }: { topic: string; sort: string }) => {\n    const topics = Path.splitTopics(topic);\n    const submitTo = topics[0] === 'all' ? 'whatever' : topics[0];\n\n    return ListingSpec.getSource(\n      scope,\n      Config.indexer,\n      'listing:topic',\n      [\n        `name ${topic}`,\n        `submit to ${submitTo}`,\n        `sort ${sort}`,\n        topic.indexOf(':') === -1 ? 'kind submission' : '',\n        ...R.map(topic => `topic ${topic}`, topics),\n        ...R.map(tab => `tab ${tab} /t/${topic}/${tab}`, tabs)\n      ].join('\\n')\n    );\n  }\n);\n\nconst getSpec = query<ListingSpecType>((scope, match) =>\n  getSource(scope, match).then(\n    R.pipe(\n      ListingSpec.fromSource as (source: string) => ListingSpecType,\n      R.assoc('basePath', `/t/${match.topic}`)\n    )\n  )\n);\n\nexport const TopicListing = Path.withRoute({\n  tabs,\n  path,\n  getSource,\n  getSpec\n});\n","import * as R from 'ramda';\nimport { query } from 'gun-scope';\nimport { ListingSpecType } from '../../types';\nimport { Config } from '../../Config';\nimport { Path } from '../Path';\nimport { ListingSpec } from '../ListingSpec';\nimport { TopicListing } from './TopicListing';\n\nconst path = '/t/:topic/chat';\nconst tabs = [...TopicListing.tabs, 'chat'];\n\nconst getSource = query<string>((scope, { topic, sort }) => {\n  const normalTopics = Path.splitTopics(topic);\n  const submitTo = topic === 'all' ? 'whatever' : normalTopics[0] || 'whatever';\n  const topics = R.reduce((res, topic) => [...res, `chat:${topic}`], [] as string[], normalTopics);\n  return ListingSpec.getSource(\n    scope,\n    Config.indexer,\n    'listing:chat',\n    [\n      'sort new',\n      'display as chat',\n      `submit to ${submitTo}`,\n      `sort ${sort}`,\n      ...R.map(topic => `topic ${topic}`, topics),\n      ...R.map(tab => `tab ${tab} /t/${topic}/${tab}`, tabs)\n    ].join('\\n')\n  );\n});\n\nconst getSpec = query<ListingSpecType>((scope, match) =>\n  getSource(scope, match).then(source => ListingSpec.fromSource(source))\n);\n\nexport const ChatListing = Path.withRoute({\n  path,\n  getSource,\n  getSpec\n});\n","import * as R from 'ramda';\nimport { query } from 'gun-scope';\nimport { Config } from '../../Config';\nimport { Path } from '../Path';\nimport { ListingSpec } from '../ListingSpec';\nimport { TopicListing } from './TopicListing';\n\nconst path = '/t/:topic/firehose';\nconst tabs = TopicListing.tabs;\n\nconst getSource = query<string>((scope, { topic, sort }) => {\n  const normalTopics = Path.splitTopics(topic);\n  const submitTo = topic === 'all' ? 'whatever' : normalTopics[0] || 'whatever';\n  const topics = normalTopics.reduce(\n    (res, topic) => [...res, topic, `chat:${topic}`, `comments:${topic}`],\n    [] as string[]\n  );\n\n  return ListingSpec.getSource(\n    scope,\n    Config.indexer,\n    'listing:firehose',\n    [\n      'sort new',\n      'display as chat',\n      `submit to ${submitTo}`,\n      `sort ${sort}`,\n      ...R.map(topic => `topic ${topic}`, topics),\n      ...R.map(tab => `tab ${tab} /t/${topic}/${tab}`, tabs)\n    ].join('\\n')\n  );\n});\n\nconst getSpec = query((scope, match) => getSource(scope, match).then(ListingSpec.fromSource));\n\nexport const FirehoseListing = Path.withRoute({\n  tabs,\n  path,\n  getSource,\n  getSpec\n});\n","import { query } from 'gun-scope';\nimport { Config } from '../../Config';\nimport { Path } from '../Path';\nimport { ListingSpec } from '../ListingSpec';\n\nconst path = '/user/:authorId/commented/:sort';\n\nconst getSource = query<string>((scope, { authorId, sort }) =>\n  ListingSpec.getSource(\n    scope,\n    Config.indexer,\n    'listing:commented',\n    [`curator ${authorId}`, `sort ${sort}`].join('\\n')\n  )\n);\n\nconst getSpec = query((scope, match) => getSource(scope, match).then(ListingSpec.fromSource));\n\nexport const CommentedListing = Path.withRoute({ path, getSource, getSpec });\n","import * as R from 'ramda';\nimport { query } from 'gun-scope';\nimport { Config } from '../../Config';\nimport { Path } from '../Path';\nimport { ListingSpec } from '../ListingSpec';\n\nconst path = '/domain/:domain/:sort';\nconst tabs = ['hot', 'new', 'discussed', 'controversial', 'top'];\n\nconst getSource = query<string>((scope, { domain, sort }) => {\n  const domains = Path.splitTopics(domain);\n\n  return ListingSpec.getSource(\n    scope,\n    Config.indexer,\n    'listing:domain',\n    [\n      `name ${domains[0]}`,\n      'submit to whatever',\n      `sort ${sort}`,\n      'kind submission',\n      ...R.map(domain => `domain ${domain}`, domains),\n      ...R.map(tab => `tab ${tab} /domain/${domain}/${tab}`, tabs)\n    ].join('\\n')\n  );\n});\n\nconst getSpec = query((scope, match) => getSource(scope, match).then(ListingSpec.fromSource));\n\nexport const DomainListing = Path.withRoute({\n  path,\n  tabs,\n  getSource,\n  getSpec\n});\n","import { query } from 'gun-scope';\nimport { Config } from '../../Config';\nimport { Path } from '../Path';\nimport { ListingSpec } from '../ListingSpec';\n\nconst path = '/things/:thingId/comments/:sort';\n\nconst getSource = query<string>((scope, { thingId, sort }) =>\n  ListingSpec.getSource(\n    scope,\n    Config.indexer,\n    'listing:comments',\n    [`op ${thingId}`, `sort ${sort}`].join('\\n')\n  )\n);\n\nconst getSpec = query((scope, match) => getSource(scope, match).then(ListingSpec.fromSource));\n\nexport const CommentListing = Path.withRoute({\n  path,\n  getSource,\n  getSpec\n});\n","import * as R from 'ramda';\nimport { query } from 'gun-scope';\nimport { Config } from '../Config';\nimport { Tokenizer } from '../Tokenizer';\nimport { Query } from '../Query';\nimport { ListingSpec } from './ListingSpec';\n\nconst tabs = ['hot', 'new', 'discussed', 'controversial', 'top'];\nconst configPageName = (name: string) => `space:${name}`;\nconst sidebarPageName = (name: string) => `space:${name}:sidebar`;\n\nconst sourceWithDefaults = R.curry(\n  (ownerId, name, source): string => {\n    let result = [source || ''];\n    const tokenized = Tokenizer.tokenize(source);\n\n    if (!tokenized.getValue('tab')) {\n      tabs.map(tab => result.push(`tab ${tab} /user/${ownerId}/spaces/${name}/${tab}`));\n    }\n\n    let indexer = tokenized.getValue('indexer');\n\n    if (!indexer) {\n      result.push(`indexer ${Config.indexer}`);\n      indexer = Config.indexer;\n    }\n\n    let tabulator = tokenized.getValue('tabulator');\n\n    if (!tabulator) result.push(`tabulator ${indexer}`);\n\n    return result.join('\\n');\n  }\n);\n\nconst getSource = query<string>((scope, authorId, name, extra) =>\n  ListingSpec.getSource(scope, authorId, configPageName(name), extra).then(\n    sourceWithDefaults(authorId, name)\n  )\n);\n\nconst getSpec = query((scope, authorId, name, extra) =>\n  getSource(scope, authorId, name, extra).then(source =>\n    ListingSpec.fromSource(source, authorId, name)\n  )\n);\n\nconst nodeToSpaceNames = R.compose(\n  R.sortBy(R.identity),\n  R.map<string, string>(R.replace(/^space:/, '')),\n  R.filter(R.compose(\n    R.propOr(false, 'length'),\n    R.match(/^space:[^:]*$/)\n  ) as (str: string) => boolean) as (names: string[]) => string[],\n  R.keysIn\n);\n\nconst userSpaceNames = query<string[]>((scope, authorId) =>\n  Query.userPages(scope, authorId).then(nodeToSpaceNames)\n);\n\nexport const SpaceSpec = {\n  configPageName,\n  sidebarPageName,\n  nodeToSpaceNames,\n  userSpaceNames,\n  tabs,\n  getSource,\n  getSpec\n};\n","import { query } from 'gun-scope';\nimport { Path } from '../Path';\nimport { SpaceSpec } from '../SpaceSpec';\n\nconst path = '/user/:authorId/spaces/:name/:sort';\n\nconst getSource = query<string>((scope, { authorId, name, sort }) =>\n  SpaceSpec.getSource(scope, authorId, name, `sort ${sort}`)\n);\n\nconst getSpec = query((scope, { authorId, name, sort }) =>\n  SpaceSpec.getSpec(scope, authorId, name, `sort ${sort}`)\n);\n\nexport const SpaceListing = Path.withRoute({\n  path,\n  getSource,\n  getSpec\n});\n","import { query } from 'gun-scope';\nimport { Config } from '../../Config';\nimport { Path } from '../Path';\nimport { ListingSpec } from '../ListingSpec';\n\nconst path = '/user/:authorId/replies/:type/:sort';\n\nconst getSource = query<string>((scope, { authorId, type, sort = 'new' }) =>\n  ListingSpec.getSource(\n    scope,\n    Config.indexer,\n    'listing:inbox',\n    [`replies to author ${authorId}`, 'kind comment', `type ${type}`, `sort ${sort}`].join('\\n')\n  )\n);\n\nconst getSpec = query((scope, match) => getSource(scope, match).then(ListingSpec.fromSource));\n\nexport const InboxListing = Path.withRoute({\n  path,\n  getSource,\n  getSpec\n});\n","import * as R from 'ramda';\nimport { query } from 'gun-scope';\nimport { ListingSpecType } from '../../types';\nimport { Config } from '../../Config';\nimport { Query } from '../../Query';\nimport { Path } from '../Path';\nimport { ListingSpec } from '../ListingSpec';\n\nconst path = '/user/:authorId/:type/:sort';\nconst tabs = ['overview', 'comments', 'submitted', 'commands'];\n\nconst getSource = query<string>((scope, { authorId, type, sort }) =>\n  ListingSpec.getSource(\n    scope,\n    Config.indexer,\n    'listing:profile',\n    [\n      `author ${authorId}`,\n      `type ${type}`,\n      `sort ${sort}`,\n      ...R.map(tab => `tab ${tab} /user/${authorId}/${tab}`, tabs)\n    ].join('\\n')\n  )\n);\n\nconst getSpec = query((scope, match) =>\n  Query.userMeta(scope, match.authorId).then(meta =>\n    getSource(scope, match).then((R.pipe(\n      ListingSpec.fromSource,\n      R.mergeLeft({\n        profileId: match.authorId,\n        displayName: R.propOr('', 'alias', meta)\n      })\n    ) as unknown) as (source: string) => ListingSpecType)\n  )\n);\n\nexport const ProfileListing = Path.withRoute({\n  path,\n  tabs,\n  getSource,\n  getSpec\n});\n","import * as R from 'ramda';\nimport { query, resolve } from 'gun-scope';\nimport { ListingSpecType, ThingDataNodeType } from '../../types';\nimport { Query } from '../../Query';\nimport { ChatListing } from './ChatListing';\nimport { FirehoseListing } from './FirehoseListing';\nimport { CommentedListing } from './CommentedListing';\nimport { TopicListing } from './TopicListing';\nimport { DomainListing } from './DomainListing';\nimport { CommentListing } from './CommentListing';\nimport { SpaceListing } from './SpaceListing';\nimport { InboxListing } from './InboxListing';\nimport { ProfileListing } from './ProfileListing';\n\nconst types = {\n  ChatListing,\n  FirehoseListing,\n  TopicListing,\n  DomainListing,\n  CommentListing,\n  SpaceListing,\n  InboxListing,\n  CommentedListing,\n  ProfileListing\n};\n\nconst typesArray = R.values(types);\n\nconst fromPath = (path: string) => {\n  let match;\n\n  for (let i = 0; i < typesArray.length; i++) {\n    match = typesArray[i].route.match(path);\n    if (match) return R.assoc('match', match, typesArray[i]);\n  }\n  return null;\n};\n\nconst sidebarFromPath = query<ThingDataNodeType | null>((scope, path) =>\n  specFromPath(scope, path).then(spec => {\n    const { fromPageAuthor = '', fromPageName = '' } = spec || {};\n    if (!fromPageAuthor || !fromPageName) return null;\n    return Query.wikiPage(scope, fromPageAuthor, `${fromPageName}:sidebar`);\n  })\n);\n\nconst specFromPath = query<ListingSpecType>((scope, path) => {\n  const type = fromPath(path);\n\n  if (!type) throw new Error(`Can't find type for path: ${path}`);\n\n  return type.getSpec(scope, type.match).then((baseSpec: ListingSpecType) => {\n    let spec = baseSpec;\n\n    if (type.match.sort === 'default') {\n      spec = R.assoc('path', type.route.reverse(R.assoc('sort', spec.sort, type.match)), spec);\n    } else {\n      spec = R.assoc('path', path, baseSpec);\n    }\n\n    if (spec.submitTopic && !spec.submitPath) {\n      spec = R.assoc('submitPath', `/t/${spec.submitTopic}/submit`, spec);\n    }\n\n    return spec;\n  });\n});\n\nexport const ListingType = {\n  ...types,\n  types,\n  fromPath,\n  sidebarFromPath,\n  specFromPath\n};\n","import * as R from 'ramda';\nimport memoize from 'fast-memoize';\nimport { ListingSpecType, ListingNodeRow, GunScope, ListingNodeType } from '../types';\nimport { ListingNode } from './ListingNode';\nimport { ListingFilter } from './ListingFilter';\nimport { ListingType } from './ListingType';\nimport { ListingSpec } from './ListingSpec';\n\nexport class ListingQuery {\n  path: string;\n  type: any;\n  spec: ListingSpecType;\n  rowsFromNode: (node: ListingNodeType) => ListingNodeRow[];\n  combineSourceRows: (rowsSets: ListingNodeRow[][]) => ListingNodeRow[];\n  viewCache: { [soul: string]: ListingQuery };\n  listings: ListingQuery[];\n  sourced: { [id: string]: ListingNodeRow };\n\n  constructor(path: string, parent?: ListingQuery) {\n    this.listings = [];\n    this.viewCache = parent ? parent.viewCache : {};\n    this.sourced = {};\n    this.path = path;\n    this.type = ListingType.fromPath(path);\n    this.spec = ListingSpec.fromSource('');\n    this.rowsFromNode = parent ? parent.rowsFromNode : memoize(ListingNode.rows);\n    this.combineSourceRows = parent\n      ? parent.combineSourceRows\n      : memoize(\n          R.pipe(\n            R.reduce(\n              R.concat as (a: ListingNodeRow[], b: ListingNodeRow[]) => ListingNodeRow[],\n              [] as ListingNodeRow[]\n            ),\n            ListingNode.sortRows,\n            R.uniqBy(R.nth(ListingNode.POS_ID))\n          )\n        );\n  }\n\n  unfilteredRows(scope: GunScope): Promise<ListingNodeRow[]> {\n    if (!this.type) return Promise.resolve([]);\n    return this.type\n      .getSpec(scope, this.type.match)\n      .then((spec: ListingSpecType) => {\n        this.spec = spec;\n        const paths = R.pathOr([], ['dataSource', 'listingPaths'], spec);\n        const listingPaths = R.without([this.path], paths);\n        this.listings = listingPaths.map(\n          path => this.viewCache[path] || (this.viewCache[path] = new ListingQuery(path, this))\n        );\n        if (!this.listings.length) {\n          return scope.get(ListingNode.soulFromPath(spec.indexer, this.path)).then(\n            R.pipe(\n              this.rowsFromNode,\n              R.of,\n              this.combineSourceRows\n            )\n          );\n        }\n        return Promise.all<ListingNodeRow[]>(this.listings.map(l => l.unfilteredRows(scope))).then(\n          this.combineSourceRows\n        );\n      })\n      .then((rows: ListingNodeRow[]) => {\n        this.sourced = R.indexBy(R.nth(ListingNode.POS_ID) as (row: any) => string, rows);\n        return rows;\n      });\n  }\n\n  async checkId(scope: GunScope, id: string): Promise<boolean> {\n    if (this.spec.isIdSticky(id)) return true;\n    if (!(id in this.sourced)) return false;\n    const filterFn = ListingFilter.thingFilter(scope, this.spec);\n    if (!(await filterFn(id))) return false;\n\n    const listings = this.listings.slice();\n    if (!listings.length) return true;\n    for (let i = 0; i < listings.length; i++) {\n      if (await listings[i].checkId(scope, id)) return true;\n    }\n\n    return false;\n  }\n\n  ids(scope: GunScope, opts = {}) {\n    return this.unfilteredRows(scope).then(rows => {\n      const stickyRows: ListingNodeRow[] = R.map(id => [-1, id, -Infinity], this.spec.stickyIds);\n      const filterFn = (id: string) => this.checkId(scope, id);\n\n      return ListingFilter.getFilteredIds(scope, this.spec, [...stickyRows, ...rows], {\n        ...opts,\n        filterFn\n      });\n    });\n  }\n}\n","import { ListingNode } from './ListingNode';\nimport { ListingSpec } from './ListingSpec';\nimport { ListingSort } from './ListingSort';\nimport { ListingType } from './ListingType';\nimport { ListingQuery } from './ListingQuery';\n\nexport { ListingDataSource } from './ListingDataSource';\nexport { ListingDefinition } from './ListingDefinition';\nexport { ListingFilter } from './ListingFilter';\nexport { ListingNode } from './ListingNode';\nexport { ListingSort } from './ListingSort';\nexport { ListingSpec } from './ListingSpec';\nexport { ListingType } from './ListingType';\nexport { ListingQuery } from './ListingQuery';\nexport { SpaceSpec } from './SpaceSpec';\n\nexport const Listing = {\n  ...ListingType.types,\n  ListingNode,\n  ListingSpec,\n  ListingQuery,\n  isValidSort: ListingSort.isValidSort,\n  idsToSouls: ListingNode.idsToSouls,\n  get: ListingNode.get,\n  typeFromPath: ListingType.fromPath,\n  sidebarFromPath: ListingType.sidebarFromPath,\n  specFromPath: ListingType.specFromPath\n};\n","import { ListingSpec } from '../Listing';\nimport { ListingSpecType } from '../types';\n\nexport class ThingQueue {\n  newIds: string[];\n  updatedIds: string[];\n  peer: any;\n  spec: ListingSpecType;\n  scopeOpts: any;\n  processingId: string;\n\n  constructor(peer: any, config = '', scopeOpts = {}) {\n    this.spec = ListingSpec.fromSource(config);\n    this.peer = peer;\n    this.newIds = [];\n    this.updatedIds = [];\n    this.processingId = '';\n    this.scopeOpts = scopeOpts;\n  }\n\n  length() {\n    return this.newIds.length + this.updatedIds.length + (this.processingId ? 1 : 0);\n  }\n\n  contains(id: string) {\n    return this.newIds.indexOf(id) !== -1 || this.updatedIds.indexOf(id) !== -1;\n  }\n\n  enqueue(id: string, isNew = false) {\n    if (this.contains(id)) return;\n    (isNew ? this.newIds : this.updatedIds).splice(0, 0, id);\n    // tslint:disable-next-line: no-floating-promises\n    this.processNext();\n  }\n\n  dequeue() {\n    return this.newIds.pop() || this.updatedIds.pop() || '';\n  }\n\n  // tslint:disable-next-line: no-empty\n  async processNext() {}\n\n  // tslint:disable-next-line: no-empty\n  onPut(msg: any) {}\n}\n","import * as R from 'ramda';\nimport { GunScope, ThingDataNodeType, ThingVoteCountsType } from '../types';\nimport { Config } from '../Config';\nimport { Query } from '../Query';\nimport { ListingSort, ListingNode, ListingSpec } from '../Listing';\nimport { Schema } from '../Schema';\nimport { ThingDataNode } from '../Thing';\nimport { ThingQueue } from './ThingQueue';\n\nasync function getListings(scope: GunScope, thingId: string) {\n  if (!thingId) return [];\n  const listings: string[] = [];\n  const [data, scores]: [ThingDataNodeType | null, ThingVoteCountsType] = await Promise.all([\n    Query.thingData(scope, thingId),\n    Query.thingScores(scope, thingId)\n  ]);\n  if (!data) return [];\n  const kind = ThingDataNode.kind(data);\n  const authorId = ThingDataNode.authorId(data);\n  const topic = ThingDataNode.topic(data)\n    .trim()\n    .toLowerCase();\n\n  if (kind === 'submission') {\n    const domain = ThingDataNode.domain(data);\n    const taggedBy = R.compose(\n      R.without(['anon']),\n      R.keysIn,\n      x => (typeof x === 'string' ? {} : x),\n      R.propOr({}, 'commands')\n    )(scores);\n\n    if (topic) listings.push(`/t/${topic}`);\n    if (topic !== 'all') listings.push('/t/all');\n    if (domain) listings.push(`/domain/${domain}`);\n    if (authorId) {\n      listings.push(`/user/${authorId}/submitted`);\n      listings.push(`/user/${authorId}/overview`);\n    }\n\n    taggedBy.forEach(tagAuthorId => listings.push(`/user/${tagAuthorId}/commented`));\n  } else if (kind === 'comment') {\n    const opId = ThingDataNode.opId(data);\n    const replyToId = ThingDataNode.replyToId(data);\n    const isCommand = ThingDataNode.isCommand(data);\n\n    if (opId) listings.push(`/things/${opId}/comments`);\n    if (topic) listings.push(`/t/comments:${topic}`);\n    if (topic !== 'all') listings.push('/t/comments:all');\n\n    if (replyToId) {\n      const replyToThingData = await Query.thingData(scope, replyToId);\n      const replyToAuthorId = ThingDataNode.authorId(replyToThingData);\n\n      if (replyToAuthorId) {\n        const replyToKind = ThingDataNode.kind(replyToThingData);\n        listings.push(`/user/${replyToAuthorId}/replies/overview`);\n        if (replyToKind === 'submission') {\n          listings.push(`/user/${replyToAuthorId}/replies/submitted`);\n        } else if (replyToKind === 'comment') {\n          listings.push(`/user/${replyToAuthorId}/replies/comments`);\n        }\n      }\n    }\n\n    if (authorId) {\n      listings.push(`/user/${authorId}/comments`);\n      listings.push(`/user/${authorId}/overview`);\n      if (isCommand) listings.push(`/user/${authorId}/commands`);\n      // TODO: update commented\n    }\n  } else if (kind === 'chatmsg') {\n    if (topic) listings.push(`/t/chat:${topic}`);\n    if (topic !== 'all') listings.push('/t/chat:all');\n  }\n\n  return listings;\n}\n\nasync function describeThingId(scope: GunScope, thingId: string) {\n  if (!thingId) return;\n  const spec = ListingSpec.fromSource('');\n  const includes: string[] = await getListings(scope, thingId);\n  if (!includes.length) return;\n\n  return {\n    id: thingId,\n    includes,\n    sorts: await Promise.all(\n      R.toPairs(ListingSort.sorts).map(async ([name, sortFn]) => [\n        name,\n        await sortFn(scope, thingId, spec)\n      ])\n    )\n  };\n}\n\nconst descriptionToListingMap = (declarativeUpdate: any) => {\n  const id = R.propOr('', 'id', declarativeUpdate);\n  const includes: string[] = R.propOr([], 'includes', declarativeUpdate);\n  const sorts: [string, number][] = R.propOr([], 'sorts', declarativeUpdate);\n  const results = [];\n\n  for (let i = 0; i < includes.length; i++) {\n    const listing = includes[i];\n\n    for (let j = 0; j < sorts.length; j++) {\n      const [sortName, value] = sorts[j];\n\n      results.push([`${listing}/${sortName}`, [[id, value]]]);\n    }\n  }\n\n  return results;\n};\n\nclass IndexerQueue extends ThingQueue {\n  async processNext() {\n    if (this.processingId) return;\n    const id = (this.processingId = this.dequeue());\n    if (!id) return;\n\n    const startedAt = new Date().getTime();\n\n    try {\n      const scope = this.peer.newScope(this.scopeOpts);\n      const description = await describeThingId(scope, id);\n      const listingMap: any[] = descriptionToListingMap(description);\n\n      // tslint:disable-next-line: await-promise\n      await Promise.all(\n        listingMap.map(async item => {\n          const [listingPath, updatedItems]: [string, [string, number][]] = item;\n          const soul = ListingNode.soulFromPath(Config.indexer, listingPath);\n          const existing = await scope.get(soul).then();\n          const diff = await ListingNode.diff(existing, updatedItems, []);\n          if (!diff) return;\n          console.log('writing', soul, diff);\n          this.peer.gun.get(soul).put(diff);\n        })\n      );\n    } catch (e) {\n      console.error('Indexer error', e.stack || e);\n    }\n\n    const endedAt = new Date().getTime();\n    console.log('indexed', (endedAt - startedAt) / 1000, this.length(), id);\n    this.processingId = '';\n    // tslint:disable-next-line: no-floating-promises\n    this.processNext();\n  }\n\n  onPut(msg: any) {\n    R.compose(\n      R.map(R.tap(([id, isNew]: [string, boolean]) => id && this.enqueue(id, isNew))),\n      R.uniqBy(R.nth(0) as (i: any) => any),\n      R.map((soul: string) => {\n        const meta = R.pathOr({}, ['put', soul, '_', '>'], msg);\n        const latest = R.values(meta)\n          .sort()\n          .pop();\n        const now = new Date().getTime();\n        const age = now - latest;\n        if (age > Config.oracleMaxStaleness) return [];\n        const thingMatch = Schema.Thing.route.match(soul);\n        const thingDataMatch = Schema.ThingDataSigned.route.match(soul);\n        const countsMatch = Schema.ThingVoteCounts.route.match(soul);\n        const thingId: string = R.propOr(\n          '',\n          'thingId',\n          thingMatch || thingDataMatch || countsMatch\n        );\n\n        return [thingId, !countsMatch];\n      }),\n      R.keysIn,\n      R.propOr({}, 'put')\n    )(msg);\n  }\n}\n\nexport const Indexer = {\n  Queue: IndexerQueue,\n  describeThingId\n};\n","import * as R from 'ramda';\nimport { ThingDataMap, CommandMap } from './types';\nimport { Constants } from './Constants';\n\nconst tokenize = R.compose(\n  R.map(R.trim),\n  R.split(' '),\n  R.replace(Constants.COMMAND_RE, ''),\n  R.defaultTo(''),\n  R.nth(0) as (inpt: string[]) => string,\n  R.split('\\n')\n);\n\nconst map = (thingData: ThingDataMap): CommandMap =>\n  R.reduce(\n    (cmdMap, id) => {\n      const body = R.pathOr('', [id, 'body'], thingData);\n      const authorId = R.pathOr('anon', [id, 'authorId'], thingData);\n      const timestamp = parseFloat(R.pathOr('', [id, 'timestamp'], thingData));\n\n      if (!R.test(Constants.COMMAND_RE, body)) return cmdMap;\n      const tokenized = [authorId, ...tokenize(body), id];\n\n      return R.assocPath(tokenized, timestamp || 0, cmdMap);\n    },\n    {},\n    R.keys(thingData)\n  );\n\nexport const CommentCommand = { tokenize, map };\n","import * as R from 'ramda';\nimport { query, all } from 'gun-scope';\nimport { Config } from '../Config';\nimport { GunNode } from '../GunNode';\nimport { Schema } from '../Schema';\nimport { Query } from '../Query';\nimport { CommentCommand } from '../CommentCommand';\nimport { ThingQueue } from './ThingQueue';\nimport { ThingVoteCountsType } from '../types';\n\nconst tabulate = query(async (scope, thingId) => {\n  if (!thingId) return null;\n  const [up, down, comment, replySouls] = await all([\n    scope.get(Schema.ThingVotesUp.route.reverse({ thingId })).count(),\n    scope.get(Schema.ThingVotesDown.route.reverse({ thingId })).count(),\n    scope.get(Schema.ThingAllComments.route.reverse({ thingId })).count(),\n    scope.get(Schema.ThingComments.route.reverse({ thingId })).souls()\n  ]);\n  const thingData = await Query.thingDataFromSouls(scope, replySouls);\n  const result: ThingVoteCountsType = {\n    up,\n    down,\n    comment,\n    replies: replySouls.length,\n    score: up - down\n  };\n\n  if (thingData) {\n    const commandMap = CommentCommand.map(thingData);\n    if (R.keys(commandMap).length) result.commands = JSON.stringify(commandMap);\n  }\n  return result;\n});\n\nclass TabulatorQueue extends ThingQueue {\n  async processNext() {\n    if (this.processingId) return;\n    const thingId = (this.processingId = this.dequeue());\n    const tabulator = this.spec.tabulator;\n    if (!thingId) return;\n    const countsSoul = Schema.ThingVoteCounts.route.reverse({ thingId, tabulator });\n\n    try {\n      const scope = this.peer.newScope(this.scopeOpts);\n      const existingCounts = await scope.get(countsSoul).then();\n      const updatedCounts = await tabulate(scope, thingId);\n      const diff = GunNode.diff(existingCounts, updatedCounts);\n      if (R.keysIn(diff).length) this.peer.gun.get(countsSoul).put(diff);\n    } catch (e) {\n      console.error('Tabulator error', e.stack || e);\n    }\n\n    this.processingId = '';\n    // tslint:disable-next-line: no-floating-promises\n    this.processNext();\n  }\n\n  onPut(msg: any) {\n    R.compose(\n      R.map(R.tap(([id, isNew]: [string, boolean]) => id && this.enqueue(id, isNew))),\n      R.uniqBy(R.nth(0) as (i: any) => any),\n      R.map((soul: string) => {\n        const meta = R.pathOr({}, ['put', soul, '_', '>'], msg);\n        const latest = R.values(meta)\n          .sort()\n          .pop();\n        const now = new Date().getTime();\n        const age = now - latest;\n        if (age > Config.oracleMaxStaleness) return [];\n        const thingMatch = Schema.Thing.route.match(soul);\n        const votesUpMatch = Schema.ThingVotesUp.route.match(soul);\n        const votesDownMatch = Schema.ThingVotesDown.route.match(soul);\n        const allCommentsMatch = Schema.ThingAllComments.route.match(soul);\n        const commentsMatch = Schema.ThingComments.route.match(soul);\n        const thingId: string = R.propOr(\n          '',\n          'thingId',\n          thingMatch || votesUpMatch || votesDownMatch || allCommentsMatch || commentsMatch\n        );\n\n        return [thingId, !(votesUpMatch || votesDownMatch || allCommentsMatch || commentsMatch)];\n      }),\n      R.keysIn,\n      R.propOr({}, 'put')\n    )(msg);\n  }\n}\n\nexport const Tabulator = { Queue: TabulatorQueue, query: tabulate };\n","interface OracleFeature {\n  onPut: (msg: any) => void;\n}\n\nexport class Oracle {\n  peer: any;\n  features: OracleFeature[];\n\n  constructor(peer: any) {\n    this.features = [];\n    this.peer = peer;\n    this.peer.gun.on('put', this.onPut.bind(this));\n  }\n\n  use(feature: OracleFeature) {\n    this.features.push(feature);\n  }\n\n  onPut(msg: any) {\n    for (let i = 0; i < this.features.length; i++) this.features[i].onPut(msg);\n  }\n}\n","import { Validation } from './Validation';\nimport { Query } from './Query';\nimport { Thing } from './Thing';\nimport { Authentication } from './Authentication';\nimport { Indexer } from './Oracle/Indexer';\nimport { Tabulator } from './Oracle/Tabulator';\nimport { Oracle } from './Oracle/Oracle';\n\nfunction init(Gun: any, config: any = {}) {\n  const {\n    leech = false,\n    disableValidation = false,\n    noGun = false,\n    localStorage = false,\n    persist = false,\n    ...rest\n  } = config || {};\n  const peer: any = { config };\n\n  if (!noGun) {\n    const cfg = { localStorage: !!localStorage, radisk: !!persist, ...rest };\n\n    if (persist) cfg.localStorage = false;\n    if (!disableValidation) Gun.on('opt', Validation.gunWireInput(peer));\n    if (cfg.storeFn) cfg.store = cfg.storeFn(cfg); // for indexeddb\n    peer.gun = Gun(cfg);\n    if (cfg.localStorage) peer.gun.on('localStorage:error', (a: any) => a.retry({}));\n    if (leech) {\n      const sendLeech = () => peer.gun._.on('out', { leech: true });\n\n      sendLeech();\n    }\n  }\n\n  let oracle: Oracle;\n  peer.oracle = () => (oracle = oracle || new Oracle(peer));\n  peer.newScope = (opts: any) => Query.createScope(peer, opts);\n  peer.onLogin = Authentication.onLogin(peer);\n  peer.signup = Authentication.signup(peer);\n  peer.login = Authentication.login(peer);\n  peer.logout = () => Authentication.logout(peer);\n  peer.isLoggedIn = () => Authentication.isLoggedIn(peer);\n  peer.submit = Thing.submit(peer);\n  peer.comment = Thing.comment(peer);\n  peer.chat = Thing.chat(peer);\n  peer.writePage = Thing.writePage(peer);\n  peer.vote = Thing.vote(peer);\n  peer.queries = Query;\n\n  peer.index = (scopeOpts: any = { timeout: 5000 }) =>\n    peer.oracle().use(new Indexer.Queue(peer, '', scopeOpts));\n  peer.tabulate = (scopeOpts: any = { timeout: 5000 }) =>\n    peer.oracle().use(new Tabulator.Queue(peer, '', scopeOpts));\n  return peer;\n}\n\nexport const Peer = {\n  init\n};\n","import * as R from 'ramda';\nimport { query, resolve } from 'gun-scope';\nimport { GunScope, ListingSpecType } from './types';\nimport { Config } from './Config';\nimport { Query } from './Query';\nimport { Listing, ListingSpec, ListingType, ListingQuery } from './Listing';\n\nconst wikiPage = R.mergeLeft({\n  withMatch: ({\n    params: { authorId = Config.owner, name }\n  }: {\n    params: { authorId: string; name: string };\n  }) => ({\n    preload: (scope: GunScope) => Query.wikiPage(scope, authorId, name)\n  })\n});\n\nconst withListingMatch = (path: string, params?: any) => {\n  if (!path) {\n    return {\n      preload: query(R.always(resolve({}))),\n      sidebar: query(R.always(resolve(''))),\n      space: query(R.always(resolve(ListingSpec.fromSource('')))),\n      ids: query(R.always(resolve([])))\n    };\n  }\n\n  const view = new ListingQuery(path);\n  const realQuery = query(view.ids.bind(view), `ids:${path}`);\n\n  return {\n    preload: (scope: GunScope) => preloadListing(scope, path, params),\n    sidebar: query(scope => Listing.sidebarFromPath(scope, path), `sidebar:${path}`),\n    space: query(scope => Listing.specFromPath(scope, path)),\n    ids: query((scope, opts = {}) => realQuery(scope, R.mergeLeft(opts, params)))\n  };\n};\n\nconst preloadListing = async (scope: GunScope, path: string, params?: any) => {\n  const match = withListingMatch(path, params);\n  const promise = Promise.all([\n    match.space(scope),\n    match.ids(scope, {}),\n    match.sidebar(scope)\n  ] as Promise<any>[]);\n  let [spec, ids]: [ListingSpecType, string[]] = (await promise) as [ListingSpecType, string[]];\n\n  if (!spec) spec = ListingSpec.fromSource('');\n  const opIds = R.pathOr([], ['filters', 'allow', 'ops'], spec);\n  if (opIds.length) {\n    await Promise.all(\n      opIds.map((id: string) =>\n        Query.thingForDisplay(scope, id, spec.tabulator || Config.tabulator)\n      )\n    );\n  }\n\n  await Promise.all(\n    ids.map(id => Query.thingForDisplay(scope, id, spec.tabulator || Config.tabulator))\n  );\n\n  if (spec.chatTopic) {\n    const chatPath = `/t/${spec.chatTopic}/chat`;\n\n    if (chatPath !== path) await preloadListing(scope, `/t/${spec.chatTopic}/chat`, {});\n  }\n\n  return scope.getCache();\n};\n\nconst listing = ({\n  prefix: defaultPrefix = 't',\n  identifier: defaultIdentifier = 'all',\n  sort: defaultSort = 'hot',\n  ...rest\n} = {}) => ({\n  ...rest,\n  withMatch: ({\n    params: { prefix = defaultPrefix, identifier = defaultIdentifier, sort = defaultSort },\n    query: queryParams = {}\n  }) => withListingMatch(`/${prefix}/${identifier}/${sort}`, queryParams)\n});\n\nconst thingComments = ({\n  prefix: defaultPrefix = 't',\n  identifier: defaultIdentifier = 'all',\n  sort: defaultSort = 'best',\n  ...rest\n} = {}) => ({\n  ...rest,\n  withMatch: ({ params: { opId = '' }, query: queryParams = {} }) =>\n    withListingMatch(\n      ListingType.CommentListing.route.reverse({\n        thingId: opId,\n        sort: R.propOr(defaultSort, 'sort', queryParams)\n      }),\n      R.assoc('limit', 1000, queryParams)\n    )\n});\n\nconst spaceListing = ({\n  name: defaultName = 'default',\n  authorId: defaultAuthorId = '',\n  sort: defaultSort = 'default',\n  ...rest\n} = {}) => ({\n  ...rest,\n  withMatch: ({\n    params: { authorId = defaultAuthorId, name = defaultName, sort = defaultSort },\n    query: queryParams = {}\n  }) =>\n    withListingMatch(\n      ListingType.SpaceListing.route.reverse({\n        authorId: authorId || Config.owner,\n        name,\n        sort\n      }),\n      queryParams\n    )\n});\n\nconst spaceThingComments = ({\n  name: defaultName = 'default',\n  authorId: defaultAuthorId = '',\n  sort: defaultSort = 'hot',\n  ...rest\n}) => ({\n  ...rest,\n  withMatch: ({\n    params: { opId = '', authorId = defaultAuthorId, name = defaultName, sort = defaultSort },\n    query: queryParams = {}\n  }) => {\n    const spacePath = ListingType.SpaceListing.route.reverse({\n      authorId: authorId || Config.owner,\n      name,\n      sort\n    });\n    const listingPath = ListingType.CommentListing.route.reverse({\n      thingId: opId,\n      sort\n    });\n\n    const view = new ListingQuery(listingPath);\n    const idsQuery = query(view.ids.bind(view), `ids:${listingPath}`);\n\n    return {\n      space: query(\n        scope => Listing.specFromPath(scope, spacePath, queryParams),\n        `spec:${spacePath}`\n      ),\n      ids: idsQuery,\n      preload: query(scope => preloadListing(scope, listingPath, queryParams))\n    };\n  }\n});\n\nconst profile = ({ sort: defaultSort = 'new', type: defaultType = 'overview', ...rest } = {}) => ({\n  ...rest,\n  withMatch: ({ params: { authorId = '', type = defaultType, sort = defaultSort }, query = {} }) =>\n    withListingMatch(ListingType.ProfileListing.route.reverse({ authorId, type, sort }), query)\n});\n\nconst inbox = ({ sort: defaultSort = 'new', type: defaultType = 'overview', ...rest } = {}) => ({\n  ...rest,\n  withMatch: ({ authorId = '', params: { type = defaultType, sort = defaultSort }, query = {} }) =>\n    withListingMatch(ListingType.InboxListing.route.reverse({ authorId, type, sort }), query)\n});\n\nexport const Page = {\n  withListingMatch,\n  preloadListing,\n  wikiPage,\n  thingComments,\n  listing,\n  spaceListing,\n  spaceThingComments,\n  profile,\n  inbox\n};\n","import { Peer } from './Peer';\nexport { Config } from './Config';\nexport { Constants } from './Constants';\nexport { CommentCommand } from './CommentCommand';\nexport { Indexer } from './Oracle/Indexer';\nexport { Listing, SpaceSpec } from './Listing';\nexport { Page } from './Page';\nexport { Peer } from './Peer';\nexport { Query } from './Query';\nexport { Schema } from './Schema';\nexport { Thing, ThingSet, ThingDataNode } from './Thing';\nexport { Validation } from './Validation';\nexport { Tabulator } from './Oracle/Tabulator';\n\nexport default Peer.init;\n"],"names":["R.keysIn","R.pathOr","R.assoc","R.compose","R.reduce","R.prop","R.toPairs","R.without","R.keys","R.path","R.propOr","R.dissoc","keys","R.difference","R.omit","initAjv","sea.initAjv","R.curry","R.map","R.slice","path","R.replace","R.split","R.filter","R.sortWith","R.ascend","R.cond","R.isNil","R.always","R.T","R.nth","R.identity","R.addIndex","R.indexBy","R.uniqBy","R.concat","scope","R.last","R.sortBy","R.values","diff","R.equals","R.pick","ids","R.mergeRight","R.test","parseURI","soulToId","soulsToIds","makeScope","R.trim","R.assocPath","values","R.uniq","R.find","R.mergeLeft","fromDefinition","R.identical","R.lte","R.gte","fromSource","R.apply","R.juxt","_a","POS_ID","POS_VAL","R.includes","R.multiply","R.toLower","R.defaultTo","R.ifElse","getSource","match","R.pipe","tabs","getSpec","R.match","R.of","includes","tslib_1.__extends","R.tap","tokenize","map","wikiPage","query"],"mappings":"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"}